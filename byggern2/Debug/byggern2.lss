
byggern2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  0000130c  000013a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000130c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800150  00800150  000013f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000144c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001488  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e0f  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a39  00000000  00000000  0000236f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000783  00000000  00000000  00002da8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  0000352c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b5  00000000  00000000  000036f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000044b  00000000  00000000  00003cad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000040f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
       4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__ctors_end>:
      9e:	11 24       	eor	r1, r1
      a0:	1f be       	out	0x3f, r1	; 63
      a2:	cf ef       	ldi	r28, 0xFF	; 255
      a4:	d4 e0       	ldi	r29, 0x04	; 4
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
      aa:	11 e0       	ldi	r17, 0x01	; 1
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	b1 e0       	ldi	r27, 0x01	; 1
      b0:	ec e0       	ldi	r30, 0x0C	; 12
      b2:	f3 e1       	ldi	r31, 0x13	; 19
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x10>
      b6:	05 90       	lpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	a0 35       	cpi	r26, 0x50	; 80
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0xc>

000000c0 <__do_clear_bss>:
      c0:	21 e0       	ldi	r18, 0x01	; 1
      c2:	a0 e5       	ldi	r26, 0x50	; 80
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	aa 35       	cpi	r26, 0x5A	; 90
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 16 02 	call	0x42c	; 0x42c <main>
      d4:	0c 94 84 09 	jmp	0x1308	; 0x1308 <_exit>

000000d8 <__bad_interrupt>:
      d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <adc_read>:
	calibrate_joy_stick();
}

ADC_output adc_read(){
	volatile uint8_t *ADC_data = (uint8_t *) (BASE_ADDRESS + ADDRESS_ADC); // ADC_data er en peker til port A der dataen fra ADCen blir lagt ut
	ADC_data[0] = 0;
      dc:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__bss_end+0x12a6>
	
	while((PORTD &= 0x10))		// busy er PD4, venter altså på 0b010000 = 0x10. Bit 5 (PD4) skal bli 1, da er busy høy
      e0:	82 b3       	in	r24, 0x12	; 18
      e2:	80 71       	andi	r24, 0x10	; 16
      e4:	82 bb       	out	0x12, r24	; 18
      e6:	81 11       	cpse	r24, r1
      e8:	fb cf       	rjmp	.-10     	; 0xe0 <adc_read+0x4>
	{
		// Venter på at busy blir høy, da er den klar til å hente ut data
	}
	
	uint8_t data_channel_0 = ADC_data[0];		// x-axis 
      ea:	e0 e0       	ldi	r30, 0x00	; 0
      ec:	f4 e1       	ldi	r31, 0x14	; 20
      ee:	60 81       	ld	r22, Z
	uint8_t data_channel_1 = ADC_data[0];		// y-axis
      f0:	70 81       	ld	r23, Z
	uint8_t data_channel_2 = ADC_data[0];		// Right slider
      f2:	80 81       	ld	r24, Z
	uint8_t data_channel_3 = ADC_data[0];		// Left slider
      f4:	90 81       	ld	r25, Z
	
	return (ADC_output){data_channel_0, data_channel_1, data_channel_2, data_channel_3};
}
      f6:	08 95       	ret

000000f8 <to_percent>:

int to_percent(uint8_t pos_in_bit){
	return (int)pos_in_bit  * ((float)200) / ((float)256) - 100;		// Skalering: hele bredden er 200% med 0% i midten og -100% og 100% i hver sin ende
      f8:	68 2f       	mov	r22, r24
      fa:	70 e0       	ldi	r23, 0x00	; 0
      fc:	80 e0       	ldi	r24, 0x00	; 0
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	0e 94 be 03 	call	0x77c	; 0x77c <__floatsisf>
     104:	20 e0       	ldi	r18, 0x00	; 0
     106:	30 e0       	ldi	r19, 0x00	; 0
     108:	48 e4       	ldi	r20, 0x48	; 72
     10a:	53 e4       	ldi	r21, 0x43	; 67
     10c:	0e 94 a2 04 	call	0x944	; 0x944 <__mulsf3>
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5b e3       	ldi	r21, 0x3B	; 59
     118:	0e 94 a2 04 	call	0x944	; 0x944 <__mulsf3>
     11c:	20 e0       	ldi	r18, 0x00	; 0
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	48 ec       	ldi	r20, 0xC8	; 200
     122:	52 e4       	ldi	r21, 0x42	; 66
     124:	0e 94 34 02 	call	0x468	; 0x468 <__subsf3>
     128:	0e 94 86 03 	call	0x70c	; 0x70c <__fixsfsi>
}
     12c:	cb 01       	movw	r24, r22
     12e:	08 95       	ret

00000130 <calibrate_joy_stick>:

void calibrate_joy_stick(){
	ADC_output adc_output = adc_read();
     130:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_read>
	uint8_t x = adc_output.x_axis;
	uint8_t y = adc_output.y_axis;
	
	uint8_t* x_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 4); 
	*x_pos_offset = x;
     134:	60 93 04 18 	sts	0x1804, r22	; 0x801804 <__bss_end+0x16aa>
	uint8_t* y_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 8);
	*y_pos_offset = y;
     138:	70 93 08 18 	sts	0x1808, r23	; 0x801808 <__bss_end+0x16ae>
     13c:	08 95       	ret

0000013e <adc_init>:
#include "multifunction.h"

#define PI 3.14159265

void adc_init (void){
	DDRD |= (1 << DDD5); //Set PD5 to output
     13e:	81 b3       	in	r24, 0x11	; 17
     140:	80 62       	ori	r24, 0x20	; 32
     142:	81 bb       	out	0x11, r24	; 17
	
	TCCR1A |= (1 << WGM10); //Fast PWM mode
     144:	8f b5       	in	r24, 0x2f	; 47
     146:	81 60       	ori	r24, 0x01	; 1
     148:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1 << WGM11); //Fast PWM mode
     14a:	8f b5       	in	r24, 0x2f	; 47
     14c:	82 60       	ori	r24, 0x02	; 2
     14e:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12); //Fast PWM mode
     150:	8e b5       	in	r24, 0x2e	; 46
     152:	88 60       	ori	r24, 0x08	; 8
     154:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << WGM13); //Fast PWM mode
     156:	8e b5       	in	r24, 0x2e	; 46
     158:	80 61       	ori	r24, 0x10	; 16
     15a:	8e bd       	out	0x2e, r24	; 46
	
	TCCR1A &= ~(1 << COM1A1); // Toggle
     15c:	8f b5       	in	r24, 0x2f	; 47
     15e:	8f 77       	andi	r24, 0x7F	; 127
     160:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= (1 << COM1A0); //Toggle
     162:	8f b5       	in	r24, 0x2f	; 47
     164:	80 64       	ori	r24, 0x40	; 64
     166:	8f bd       	out	0x2f, r24	; 47
	
	TCCR1B &= ~(1 << CS12); //Clock select bit
     168:	8e b5       	in	r24, 0x2e	; 46
     16a:	8b 7f       	andi	r24, 0xFB	; 251
     16c:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~(1 << CS11); //Clock select bit
     16e:	8e b5       	in	r24, 0x2e	; 46
     170:	8d 7f       	andi	r24, 0xFD	; 253
     172:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= (1 << CS10); //Clock select bit
     174:	8e b5       	in	r24, 0x2e	; 46
     176:	81 60       	ori	r24, 0x01	; 1
     178:	8e bd       	out	0x2e, r24	; 46
	
	TCCR1A &= ~(1 << FOC1A); // Had to be zero
     17a:	8f b5       	in	r24, 0x2f	; 47
     17c:	87 7f       	andi	r24, 0xF7	; 247
     17e:	8f bd       	out	0x2f, r24	; 47
	
	OCR1AH = 0x0;
     180:	1b bc       	out	0x2b, r1	; 43
	OCR1AL = 0x1;
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	8a bd       	out	0x2a, r24	; 42
	
	DDRD &= ~(1 << DDD4); // Set PD4 to input
     186:	81 b3       	in	r24, 0x11	; 17
     188:	8f 7e       	andi	r24, 0xEF	; 239
     18a:	81 bb       	out	0x11, r24	; 17
	
	uint8_t* x_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 4); // Plusser på 4 fordi på denne minneadressen skal vi lagre en float, som tar opp 4 bytes, altså må vi ha 4 minneaddresser
	*x_pos_offset = 0;
     18c:	10 92 04 18 	sts	0x1804, r1	; 0x801804 <__bss_end+0x16aa>
	uint8_t* y_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 8); 
	*y_pos_offset = 0;
     190:	10 92 08 18 	sts	0x1808, r1	; 0x801808 <__bss_end+0x16ae>
	
	calibrate_joy_stick();
     194:	0e 94 98 00 	call	0x130	; 0x130 <calibrate_joy_stick>
     198:	08 95       	ret

0000019a <joy_get_dir>:
	uint8_t* y_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 8);
	*y_pos_offset = y;
	
}

enum Direction joy_get_dir(int x, int y){
     19a:	8f 92       	push	r8
     19c:	9f 92       	push	r9
     19e:	af 92       	push	r10
     1a0:	bf 92       	push	r11
     1a2:	cf 92       	push	r12
     1a4:	df 92       	push	r13
     1a6:	ef 92       	push	r14
     1a8:	ff 92       	push	r15
     1aa:	cf 93       	push	r28
     1ac:	df 93       	push	r29
     1ae:	ec 01       	movw	r28, r24
     1b0:	7b 01       	movw	r14, r22
	enum Direction dir = UNKNOWN;
	
	uint8_t* x_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 4);
	uint8_t* y_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 8);
	int x_offset_percent = to_percent(*x_pos_offset);
     1b2:	80 91 04 18 	lds	r24, 0x1804	; 0x801804 <__bss_end+0x16aa>
     1b6:	0e 94 7c 00 	call	0xf8	; 0xf8 <to_percent>
     1ba:	6c 01       	movw	r12, r24
	int y_offset_percent = to_percent(*y_pos_offset);
     1bc:	80 91 08 18 	lds	r24, 0x1808	; 0x801808 <__bss_end+0x16ae>
     1c0:	0e 94 7c 00 	call	0xf8	; 0xf8 <to_percent>
	
	if (((x_offset_percent -5) < x && x < (x_offset_percent + 5)) && ((y_offset_percent - 5) < y && y < (y_offset_percent + 5))){
     1c4:	96 01       	movw	r18, r12
     1c6:	25 50       	subi	r18, 0x05	; 5
     1c8:	31 09       	sbc	r19, r1
     1ca:	2c 17       	cp	r18, r28
     1cc:	3d 07       	cpc	r19, r29
     1ce:	8c f4       	brge	.+34     	; 0x1f2 <joy_get_dir+0x58>
     1d0:	25 e0       	ldi	r18, 0x05	; 5
     1d2:	c2 0e       	add	r12, r18
     1d4:	d1 1c       	adc	r13, r1
     1d6:	cc 15       	cp	r28, r12
     1d8:	dd 05       	cpc	r29, r13
     1da:	5c f4       	brge	.+22     	; 0x1f2 <joy_get_dir+0x58>
     1dc:	9c 01       	movw	r18, r24
     1de:	25 50       	subi	r18, 0x05	; 5
     1e0:	31 09       	sbc	r19, r1
     1e2:	2e 15       	cp	r18, r14
     1e4:	3f 05       	cpc	r19, r15
     1e6:	2c f4       	brge	.+10     	; 0x1f2 <joy_get_dir+0x58>
     1e8:	05 96       	adiw	r24, 0x05	; 5
     1ea:	e8 16       	cp	r14, r24
     1ec:	f9 06       	cpc	r15, r25
     1ee:	0c f4       	brge	.+2      	; 0x1f2 <joy_get_dir+0x58>
     1f0:	7a c0       	rjmp	.+244    	; 0x2e6 <__EEPROM_REGION_LENGTH__+0xe6>
		dir = NEUTRAL;
	} else{
		double angle = atan2((double) y, (double) x);
     1f2:	be 01       	movw	r22, r28
     1f4:	dd 0f       	add	r29, r29
     1f6:	88 0b       	sbc	r24, r24
     1f8:	99 0b       	sbc	r25, r25
     1fa:	0e 94 be 03 	call	0x77c	; 0x77c <__floatsisf>
     1fe:	4b 01       	movw	r8, r22
     200:	5c 01       	movw	r10, r24
     202:	b7 01       	movw	r22, r14
     204:	ff 0c       	add	r15, r15
     206:	88 0b       	sbc	r24, r24
     208:	99 0b       	sbc	r25, r25
     20a:	0e 94 be 03 	call	0x77c	; 0x77c <__floatsisf>
     20e:	a5 01       	movw	r20, r10
     210:	94 01       	movw	r18, r8
     212:	0e 94 b4 02 	call	0x568	; 0x568 <atan2>
     216:	6b 01       	movw	r12, r22
     218:	7c 01       	movw	r14, r24
		
		if (angle > PI/4 && angle <= 3*PI/4){
     21a:	2b ed       	ldi	r18, 0xDB	; 219
     21c:	3f e0       	ldi	r19, 0x0F	; 15
     21e:	49 e4       	ldi	r20, 0x49	; 73
     220:	5f e3       	ldi	r21, 0x3F	; 63
     222:	0e 94 95 04 	call	0x92a	; 0x92a <__gesf2>
     226:	18 16       	cp	r1, r24
     228:	5c f4       	brge	.+22     	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
     22a:	24 ee       	ldi	r18, 0xE4	; 228
     22c:	3b ec       	ldi	r19, 0xCB	; 203
     22e:	46 e1       	ldi	r20, 0x16	; 22
     230:	50 e4       	ldi	r21, 0x40	; 64
     232:	c7 01       	movw	r24, r14
     234:	b6 01       	movw	r22, r12
     236:	0e 94 13 03 	call	0x626	; 0x626 <__cmpsf2>
     23a:	18 16       	cp	r1, r24
     23c:	0c f0       	brlt	.+2      	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
     23e:	55 c0       	rjmp	.+170    	; 0x2ea <__EEPROM_REGION_LENGTH__+0xea>
			dir = UP;
		}
		else if ((angle > 3*PI/4 && angle <= PI) || (angle <= -3*PI/4 && angle > -PI)){
     240:	24 ee       	ldi	r18, 0xE4	; 228
     242:	3b ec       	ldi	r19, 0xCB	; 203
     244:	46 e1       	ldi	r20, 0x16	; 22
     246:	50 e4       	ldi	r21, 0x40	; 64
     248:	c7 01       	movw	r24, r14
     24a:	b6 01       	movw	r22, r12
     24c:	0e 94 95 04 	call	0x92a	; 0x92a <__gesf2>
     250:	18 16       	cp	r1, r24
     252:	5c f4       	brge	.+22     	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
     254:	2b ed       	ldi	r18, 0xDB	; 219
     256:	3f e0       	ldi	r19, 0x0F	; 15
     258:	49 e4       	ldi	r20, 0x49	; 73
     25a:	50 e4       	ldi	r21, 0x40	; 64
     25c:	c7 01       	movw	r24, r14
     25e:	b6 01       	movw	r22, r12
     260:	0e 94 13 03 	call	0x626	; 0x626 <__cmpsf2>
     264:	18 16       	cp	r1, r24
     266:	0c f0       	brlt	.+2      	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
     268:	42 c0       	rjmp	.+132    	; 0x2ee <__EEPROM_REGION_LENGTH__+0xee>
     26a:	24 ee       	ldi	r18, 0xE4	; 228
     26c:	3b ec       	ldi	r19, 0xCB	; 203
     26e:	46 e1       	ldi	r20, 0x16	; 22
     270:	50 ec       	ldi	r21, 0xC0	; 192
     272:	c7 01       	movw	r24, r14
     274:	b6 01       	movw	r22, r12
     276:	0e 94 13 03 	call	0x626	; 0x626 <__cmpsf2>
     27a:	18 16       	cp	r1, r24
     27c:	54 f0       	brlt	.+20     	; 0x292 <__EEPROM_REGION_LENGTH__+0x92>
     27e:	2b ed       	ldi	r18, 0xDB	; 219
     280:	3f e0       	ldi	r19, 0x0F	; 15
     282:	49 e4       	ldi	r20, 0x49	; 73
     284:	50 ec       	ldi	r21, 0xC0	; 192
     286:	c7 01       	movw	r24, r14
     288:	b6 01       	movw	r22, r12
     28a:	0e 94 95 04 	call	0x92a	; 0x92a <__gesf2>
     28e:	18 16       	cp	r1, r24
     290:	84 f1       	brlt	.+96     	; 0x2f2 <__EEPROM_REGION_LENGTH__+0xf2>
			dir = LEFT;
		}
		else if (angle > -3*PI/4 &&  angle <= -PI/4 ){
     292:	24 ee       	ldi	r18, 0xE4	; 228
     294:	3b ec       	ldi	r19, 0xCB	; 203
     296:	46 e1       	ldi	r20, 0x16	; 22
     298:	50 ec       	ldi	r21, 0xC0	; 192
     29a:	c7 01       	movw	r24, r14
     29c:	b6 01       	movw	r22, r12
     29e:	0e 94 95 04 	call	0x92a	; 0x92a <__gesf2>
     2a2:	18 16       	cp	r1, r24
     2a4:	54 f4       	brge	.+20     	; 0x2ba <__EEPROM_REGION_LENGTH__+0xba>
     2a6:	2b ed       	ldi	r18, 0xDB	; 219
     2a8:	3f e0       	ldi	r19, 0x0F	; 15
     2aa:	49 e4       	ldi	r20, 0x49	; 73
     2ac:	5f eb       	ldi	r21, 0xBF	; 191
     2ae:	c7 01       	movw	r24, r14
     2b0:	b6 01       	movw	r22, r12
     2b2:	0e 94 13 03 	call	0x626	; 0x626 <__cmpsf2>
     2b6:	18 16       	cp	r1, r24
     2b8:	f4 f4       	brge	.+60     	; 0x2f6 <__EEPROM_REGION_LENGTH__+0xf6>
			dir = DOWN;
		}
		else if (angle > -PI/4 && angle <= PI/4){
     2ba:	2b ed       	ldi	r18, 0xDB	; 219
     2bc:	3f e0       	ldi	r19, 0x0F	; 15
     2be:	49 e4       	ldi	r20, 0x49	; 73
     2c0:	5f eb       	ldi	r21, 0xBF	; 191
     2c2:	c7 01       	movw	r24, r14
     2c4:	b6 01       	movw	r22, r12
     2c6:	0e 94 95 04 	call	0x92a	; 0x92a <__gesf2>
     2ca:	18 16       	cp	r1, r24
     2cc:	b4 f4       	brge	.+44     	; 0x2fa <__EEPROM_REGION_LENGTH__+0xfa>
     2ce:	2b ed       	ldi	r18, 0xDB	; 219
     2d0:	3f e0       	ldi	r19, 0x0F	; 15
     2d2:	49 e4       	ldi	r20, 0x49	; 73
     2d4:	5f e3       	ldi	r21, 0x3F	; 63
     2d6:	c7 01       	movw	r24, r14
     2d8:	b6 01       	movw	r22, r12
     2da:	0e 94 13 03 	call	0x626	; 0x626 <__cmpsf2>
     2de:	18 16       	cp	r1, r24
     2e0:	74 f4       	brge	.+28     	; 0x2fe <__EEPROM_REGION_LENGTH__+0xfe>
	*y_pos_offset = y;
	
}

enum Direction joy_get_dir(int x, int y){
	enum Direction dir = UNKNOWN;
     2e2:	85 e0       	ldi	r24, 0x05	; 5
     2e4:	0d c0       	rjmp	.+26     	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
	uint8_t* y_pos_offset = (uint8_t *) (BASE_ADDRESS + ADDRESS_SRAM + 8);
	int x_offset_percent = to_percent(*x_pos_offset);
	int y_offset_percent = to_percent(*y_pos_offset);
	
	if (((x_offset_percent -5) < x && x < (x_offset_percent + 5)) && ((y_offset_percent - 5) < y && y < (y_offset_percent + 5))){
		dir = NEUTRAL;
     2e6:	84 e0       	ldi	r24, 0x04	; 4
     2e8:	0b c0       	rjmp	.+22     	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
	} else{
		double angle = atan2((double) y, (double) x);
		
		if (angle > PI/4 && angle <= 3*PI/4){
			dir = UP;
     2ea:	82 e0       	ldi	r24, 0x02	; 2
     2ec:	09 c0       	rjmp	.+18     	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
		}
		else if ((angle > 3*PI/4 && angle <= PI) || (angle <= -3*PI/4 && angle > -PI)){
			dir = LEFT;
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	07 c0       	rjmp	.+14     	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	05 c0       	rjmp	.+10     	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
		}
		else if (angle > -3*PI/4 &&  angle <= -PI/4 ){
			dir = DOWN;
     2f6:	83 e0       	ldi	r24, 0x03	; 3
     2f8:	03 c0       	rjmp	.+6      	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
	*y_pos_offset = y;
	
}

enum Direction joy_get_dir(int x, int y){
	enum Direction dir = UNKNOWN;
     2fa:	85 e0       	ldi	r24, 0x05	; 5
     2fc:	01 c0       	rjmp	.+2      	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
		}
		else if (angle > -3*PI/4 &&  angle <= -PI/4 ){
			dir = DOWN;
		}
		else if (angle > -PI/4 && angle <= PI/4){
			dir = RIGHT;
     2fe:	81 e0       	ldi	r24, 0x01	; 1
		}
	}
	return dir;
}
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	ff 90       	pop	r15
     306:	ef 90       	pop	r14
     308:	df 90       	pop	r13
     30a:	cf 90       	pop	r12
     30c:	bf 90       	pop	r11
     30e:	af 90       	pop	r10
     310:	9f 90       	pop	r9
     312:	8f 90       	pop	r8
     314:	08 95       	ret

00000316 <get_joy_state>:

Joy_state get_joy_state(){
     316:	ef 92       	push	r14
     318:	ff 92       	push	r15
     31a:	0f 93       	push	r16
     31c:	1f 93       	push	r17
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	00 d0       	rcall	.+0      	; 0x324 <get_joy_state+0xe>
     324:	00 d0       	rcall	.+0      	; 0x326 <get_joy_state+0x10>
     326:	1f 92       	push	r1
     328:	cd b7       	in	r28, 0x3d	; 61
     32a:	de b7       	in	r29, 0x3e	; 62
	ADC_output adc_output = adc_read();
     32c:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_read>
     330:	86 2f       	mov	r24, r22
     332:	17 2f       	mov	r17, r23
	int x_percent = to_percent(adc_output.x_axis);
     334:	0e 94 7c 00 	call	0xf8	; 0xf8 <to_percent>
     338:	08 2f       	mov	r16, r24
     33a:	e9 2e       	mov	r14, r25
	int y_percent = to_percent(adc_output.y_axis);
     33c:	81 2f       	mov	r24, r17
     33e:	0e 94 7c 00 	call	0xf8	; 0xf8 <to_percent>
     342:	18 2f       	mov	r17, r24
     344:	f9 2e       	mov	r15, r25
	
	enum Direction dir = joy_get_dir(x_percent, y_percent);
     346:	68 2f       	mov	r22, r24
     348:	79 2f       	mov	r23, r25
     34a:	80 2f       	mov	r24, r16
     34c:	9e 2d       	mov	r25, r14
     34e:	0e 94 cd 00 	call	0x19a	; 0x19a <joy_get_dir>
	
	return (Joy_state){x_percent, y_percent, dir};
     352:	20 2f       	mov	r18, r16
     354:	3e 2d       	mov	r19, r14
     356:	41 2f       	mov	r20, r17
     358:	5f 2d       	mov	r21, r15
	}
     35a:	68 2f       	mov	r22, r24
     35c:	70 e0       	ldi	r23, 0x00	; 0
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	0f 90       	pop	r0
     364:	0f 90       	pop	r0
     366:	0f 90       	pop	r0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	1f 91       	pop	r17
     372:	0f 91       	pop	r16
     374:	ff 90       	pop	r15
     376:	ef 90       	pop	r14
     378:	08 95       	ret

0000037a <joy_print_state>:

void joy_print_state() {
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
     37e:	00 d0       	rcall	.+0      	; 0x380 <joy_print_state+0x6>
     380:	00 d0       	rcall	.+0      	; 0x382 <joy_print_state+0x8>
     382:	1f 92       	push	r1
     384:	cd b7       	in	r28, 0x3d	; 61
     386:	de b7       	in	r29, 0x3e	; 62
	Joy_state state = get_joy_state();
     388:	0e 94 8b 01 	call	0x316	; 0x316 <get_joy_state>
     38c:	29 83       	std	Y+1, r18	; 0x01
     38e:	3a 83       	std	Y+2, r19	; 0x02
     390:	4b 83       	std	Y+3, r20	; 0x03
     392:	5c 83       	std	Y+4, r21	; 0x04
	printf("x = %d, y = %d and dir = %d\n", state.x_percent, state.y_percent, state.dir);
     394:	1f 92       	push	r1
     396:	6f 93       	push	r22
     398:	8c 81       	ldd	r24, Y+4	; 0x04
     39a:	8f 93       	push	r24
     39c:	8b 81       	ldd	r24, Y+3	; 0x03
     39e:	8f 93       	push	r24
     3a0:	8a 81       	ldd	r24, Y+2	; 0x02
     3a2:	8f 93       	push	r24
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	8f 93       	push	r24
     3a8:	86 e0       	ldi	r24, 0x06	; 6
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	9f 93       	push	r25
     3ae:	8f 93       	push	r24
     3b0:	0e 94 62 05 	call	0xac4	; 0xac4 <printf>
}
     3b4:	0f b6       	in	r0, 0x3f	; 63
     3b6:	f8 94       	cli
     3b8:	de bf       	out	0x3e, r29	; 62
     3ba:	0f be       	out	0x3f, r0	; 63
     3bc:	cd bf       	out	0x3d, r28	; 61
     3be:	0f 90       	pop	r0
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	0f 90       	pop	r0
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <print_slider_state>:

void print_slider_state(){
	ADC_output adc_output = adc_read();
     3ce:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_read>
	printf("Left slider: %d, right slider: %d \n", adc_output.left_slider, adc_output.right_slider);
     3d2:	1f 92       	push	r1
     3d4:	8f 93       	push	r24
     3d6:	1f 92       	push	r1
     3d8:	9f 93       	push	r25
     3da:	83 e2       	ldi	r24, 0x23	; 35
     3dc:	91 e0       	ldi	r25, 0x01	; 1
     3de:	9f 93       	push	r25
     3e0:	8f 93       	push	r24
     3e2:	0e 94 62 05 	call	0xac4	; 0xac4 <printf>
}
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	08 95       	ret

000003f4 <xmem_init>:
 

#include "xmem.h"

void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
     3f4:	85 b7       	in	r24, 0x35	; 53
     3f6:	80 68       	ori	r24, 0x80	; 128
     3f8:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // fjerner JTAG-bitsene fra external memory address, se side 32 i ATmega datablad
     3fa:	80 b7       	in	r24, 0x30	; 48
     3fc:	80 62       	ori	r24, 0x20	; 32
     3fe:	80 bf       	out	0x30, r24	; 48
     400:	08 95       	ret

00000402 <uart_write>:
void uart_write(unsigned char letter){
	/*1. Sjekke om det er klart til å sende ny data
	2. sende ny data*/
	 
	//loop_until_bit_is_set(UCSR0A, UDRE0); //5 pga UDRE0 er på plass 5 (UDRE0 er 1 hvis UDR0 er tomt, klar til å sende på nytt )
	while(!(UCSR0A & (1<<UDRE0))){
     402:	5d 9b       	sbis	0x0b, 5	; 11
     404:	fe cf       	rjmp	.-4      	; 0x402 <uart_write>
		;
	}
	UDR0 = letter;
     406:	8c b9       	out	0x0c, r24	; 12
     408:	08 95       	ret

0000040a <uart_read>:
}

unsigned char uart_read(){
	//loop_until_bit_is_set(UCSR0A, RXC0); //RXC0 er på plass 7, RXC0 = rx complete, høy når complete 
	while (!(UCSR0A & (1 << RXC0))){
     40a:	5f 9b       	sbis	0x0b, 7	; 11
     40c:	fe cf       	rjmp	.-4      	; 0x40a <uart_read>
		
	}
	return UDR0;
     40e:	8c b1       	in	r24, 0x0c	; 12
}
     410:	08 95       	ret

00000412 <uart_init>:

#include "uart.h"

void uart_init(unsigned int ubrr){
	//Set baud rate, divided into two registers
	UBRR0H = (unsigned char)(ubrr>>8); //high register, alt får egt plass på 8 bit så derfor blir det 0
     412:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr; //low register
     414:	89 b9       	out	0x09, r24	; 9
				
	/* Enable receiver and transmitter 
	hvor mange bit data: man kan ha 5-9 bit, vi vil ha 8
	hvor mange stop-bit: 2 stk, pga ignorerer det første bitet*/
			
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     416:	88 e1       	ldi	r24, 0x18	; 24
     418:	8a b9       	out	0x0a, r24	; 10
	//UCSR0C = (1 << URSEL0)|(1<< USBS0)|(1 << UCSZ01)|(1 << UCSZ00); //Setter USBS0 -> 1 (2 stop bit), setter UCSZ2:0 -> 011 (8 bit data) [side 189 ATmega162/V]		
	UCSR0C = (1 << URSEL0)|(1<< USBS0)|(3 << UCSZ00);
     41a:	8e e8       	ldi	r24, 0x8E	; 142
     41c:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(uart_write, uart_read);
     41e:	65 e0       	ldi	r22, 0x05	; 5
     420:	72 e0       	ldi	r23, 0x02	; 2
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	92 e0       	ldi	r25, 0x02	; 2
     426:	0e 94 17 05 	call	0xa2e	; 0xa2e <fdevopen>
     42a:	08 95       	ret

0000042c <main>:
#include "xmem.h"
#include "multifunction.h"


int main(void){
	uart_init(MYUBRR);
     42c:	8f e1       	ldi	r24, 0x1F	; 31
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 09 02 	call	0x412	; 0x412 <uart_init>
	
	xmem_init();
     434:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <xmem_init>
	adc_init();
     438:	0e 94 9f 00 	call	0x13e	; 0x13e <adc_init>
	printf("Start: ");
     43c:	87 e4       	ldi	r24, 0x47	; 71
     43e:	91 e0       	ldi	r25, 0x01	; 1
     440:	9f 93       	push	r25
     442:	8f 93       	push	r24
     444:	0e 94 62 05 	call	0xac4	; 0xac4 <printf>
     448:	0f 90       	pop	r0
     44a:	0f 90       	pop	r0
	
	while(1){
		joy_print_state();
     44c:	0e 94 bd 01 	call	0x37a	; 0x37a <joy_print_state>
		print_slider_state();
     450:	0e 94 e7 01 	call	0x3ce	; 0x3ce <print_slider_state>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     454:	2f ef       	ldi	r18, 0xFF	; 255
     456:	8f ef       	ldi	r24, 0xFF	; 255
     458:	9e e0       	ldi	r25, 0x0E	; 14
     45a:	21 50       	subi	r18, 0x01	; 1
     45c:	80 40       	sbci	r24, 0x00	; 0
     45e:	90 40       	sbci	r25, 0x00	; 0
     460:	e1 f7       	brne	.-8      	; 0x45a <main+0x2e>
     462:	00 c0       	rjmp	.+0      	; 0x464 <main+0x38>
     464:	00 00       	nop
     466:	f2 cf       	rjmp	.-28     	; 0x44c <main+0x20>

00000468 <__subsf3>:
     468:	50 58       	subi	r21, 0x80	; 128

0000046a <__addsf3>:
     46a:	bb 27       	eor	r27, r27
     46c:	aa 27       	eor	r26, r26
     46e:	0e 94 4c 02 	call	0x498	; 0x498 <__addsf3x>
     472:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__fp_round>
     476:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_pscA>
     47a:	38 f0       	brcs	.+14     	; 0x48a <__addsf3+0x20>
     47c:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscB>
     480:	20 f0       	brcs	.+8      	; 0x48a <__addsf3+0x20>
     482:	39 f4       	brne	.+14     	; 0x492 <__addsf3+0x28>
     484:	9f 3f       	cpi	r25, 0xFF	; 255
     486:	19 f4       	brne	.+6      	; 0x48e <__addsf3+0x24>
     488:	26 f4       	brtc	.+8      	; 0x492 <__addsf3+0x28>
     48a:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_nan>
     48e:	0e f4       	brtc	.+2      	; 0x492 <__addsf3+0x28>
     490:	e0 95       	com	r30
     492:	e7 fb       	bst	r30, 7
     494:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_inf>

00000498 <__addsf3x>:
     498:	e9 2f       	mov	r30, r25
     49a:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__fp_split3>
     49e:	58 f3       	brcs	.-42     	; 0x476 <__addsf3+0xc>
     4a0:	ba 17       	cp	r27, r26
     4a2:	62 07       	cpc	r22, r18
     4a4:	73 07       	cpc	r23, r19
     4a6:	84 07       	cpc	r24, r20
     4a8:	95 07       	cpc	r25, r21
     4aa:	20 f0       	brcs	.+8      	; 0x4b4 <__addsf3x+0x1c>
     4ac:	79 f4       	brne	.+30     	; 0x4cc <__addsf3x+0x34>
     4ae:	a6 f5       	brtc	.+104    	; 0x518 <__stack+0x19>
     4b0:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_zero>
     4b4:	0e f4       	brtc	.+2      	; 0x4b8 <__addsf3x+0x20>
     4b6:	e0 95       	com	r30
     4b8:	0b 2e       	mov	r0, r27
     4ba:	ba 2f       	mov	r27, r26
     4bc:	a0 2d       	mov	r26, r0
     4be:	0b 01       	movw	r0, r22
     4c0:	b9 01       	movw	r22, r18
     4c2:	90 01       	movw	r18, r0
     4c4:	0c 01       	movw	r0, r24
     4c6:	ca 01       	movw	r24, r20
     4c8:	a0 01       	movw	r20, r0
     4ca:	11 24       	eor	r1, r1
     4cc:	ff 27       	eor	r31, r31
     4ce:	59 1b       	sub	r21, r25
     4d0:	99 f0       	breq	.+38     	; 0x4f8 <__addsf3x+0x60>
     4d2:	59 3f       	cpi	r21, 0xF9	; 249
     4d4:	50 f4       	brcc	.+20     	; 0x4ea <__addsf3x+0x52>
     4d6:	50 3e       	cpi	r21, 0xE0	; 224
     4d8:	68 f1       	brcs	.+90     	; 0x534 <__stack+0x35>
     4da:	1a 16       	cp	r1, r26
     4dc:	f0 40       	sbci	r31, 0x00	; 0
     4de:	a2 2f       	mov	r26, r18
     4e0:	23 2f       	mov	r18, r19
     4e2:	34 2f       	mov	r19, r20
     4e4:	44 27       	eor	r20, r20
     4e6:	58 5f       	subi	r21, 0xF8	; 248
     4e8:	f3 cf       	rjmp	.-26     	; 0x4d0 <__addsf3x+0x38>
     4ea:	46 95       	lsr	r20
     4ec:	37 95       	ror	r19
     4ee:	27 95       	ror	r18
     4f0:	a7 95       	ror	r26
     4f2:	f0 40       	sbci	r31, 0x00	; 0
     4f4:	53 95       	inc	r21
     4f6:	c9 f7       	brne	.-14     	; 0x4ea <__addsf3x+0x52>
     4f8:	7e f4       	brtc	.+30     	; 0x518 <__stack+0x19>
     4fa:	1f 16       	cp	r1, r31
     4fc:	ba 0b       	sbc	r27, r26
     4fe:	62 0b       	sbc	r22, r18
     500:	73 0b       	sbc	r23, r19
     502:	84 0b       	sbc	r24, r20
     504:	ba f0       	brmi	.+46     	; 0x534 <__stack+0x35>
     506:	91 50       	subi	r25, 0x01	; 1
     508:	a1 f0       	breq	.+40     	; 0x532 <__stack+0x33>
     50a:	ff 0f       	add	r31, r31
     50c:	bb 1f       	adc	r27, r27
     50e:	66 1f       	adc	r22, r22
     510:	77 1f       	adc	r23, r23
     512:	88 1f       	adc	r24, r24
     514:	c2 f7       	brpl	.-16     	; 0x506 <__stack+0x7>
     516:	0e c0       	rjmp	.+28     	; 0x534 <__stack+0x35>
     518:	ba 0f       	add	r27, r26
     51a:	62 1f       	adc	r22, r18
     51c:	73 1f       	adc	r23, r19
     51e:	84 1f       	adc	r24, r20
     520:	48 f4       	brcc	.+18     	; 0x534 <__stack+0x35>
     522:	87 95       	ror	r24
     524:	77 95       	ror	r23
     526:	67 95       	ror	r22
     528:	b7 95       	ror	r27
     52a:	f7 95       	ror	r31
     52c:	9e 3f       	cpi	r25, 0xFE	; 254
     52e:	08 f0       	brcs	.+2      	; 0x532 <__stack+0x33>
     530:	b0 cf       	rjmp	.-160    	; 0x492 <__addsf3+0x28>
     532:	93 95       	inc	r25
     534:	88 0f       	add	r24, r24
     536:	08 f0       	brcs	.+2      	; 0x53a <__stack+0x3b>
     538:	99 27       	eor	r25, r25
     53a:	ee 0f       	add	r30, r30
     53c:	97 95       	ror	r25
     53e:	87 95       	ror	r24
     540:	08 95       	ret
     542:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_pscA>
     546:	60 f0       	brcs	.+24     	; 0x560 <__stack+0x61>
     548:	80 e8       	ldi	r24, 0x80	; 128
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	09 f4       	brne	.+2      	; 0x550 <__stack+0x51>
     54e:	9e ef       	ldi	r25, 0xFE	; 254
     550:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscB>
     554:	28 f0       	brcs	.+10     	; 0x560 <__stack+0x61>
     556:	40 e8       	ldi	r20, 0x80	; 128
     558:	51 e0       	ldi	r21, 0x01	; 1
     55a:	71 f4       	brne	.+28     	; 0x578 <atan2+0x10>
     55c:	5e ef       	ldi	r21, 0xFE	; 254
     55e:	0c c0       	rjmp	.+24     	; 0x578 <atan2+0x10>
     560:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_nan>
     564:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_zero>

00000568 <atan2>:
     568:	e9 2f       	mov	r30, r25
     56a:	e0 78       	andi	r30, 0x80	; 128
     56c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__fp_split3>
     570:	40 f3       	brcs	.-48     	; 0x542 <__stack+0x43>
     572:	09 2e       	mov	r0, r25
     574:	05 2a       	or	r0, r21
     576:	b1 f3       	breq	.-20     	; 0x564 <__stack+0x65>
     578:	26 17       	cp	r18, r22
     57a:	37 07       	cpc	r19, r23
     57c:	48 07       	cpc	r20, r24
     57e:	59 07       	cpc	r21, r25
     580:	38 f0       	brcs	.+14     	; 0x590 <atan2+0x28>
     582:	0e 2e       	mov	r0, r30
     584:	07 f8       	bld	r0, 7
     586:	e0 25       	eor	r30, r0
     588:	69 f0       	breq	.+26     	; 0x5a4 <atan2+0x3c>
     58a:	e0 25       	eor	r30, r0
     58c:	e0 64       	ori	r30, 0x40	; 64
     58e:	0a c0       	rjmp	.+20     	; 0x5a4 <atan2+0x3c>
     590:	ef 63       	ori	r30, 0x3F	; 63
     592:	07 f8       	bld	r0, 7
     594:	00 94       	com	r0
     596:	07 fa       	bst	r0, 7
     598:	db 01       	movw	r26, r22
     59a:	b9 01       	movw	r22, r18
     59c:	9d 01       	movw	r18, r26
     59e:	dc 01       	movw	r26, r24
     5a0:	ca 01       	movw	r24, r20
     5a2:	ad 01       	movw	r20, r26
     5a4:	ef 93       	push	r30
     5a6:	0e 94 2b 03 	call	0x656	; 0x656 <__divsf3_pse>
     5aa:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_round>
     5ae:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <atan>
     5b2:	5f 91       	pop	r21
     5b4:	55 23       	and	r21, r21
     5b6:	39 f0       	breq	.+14     	; 0x5c6 <atan2+0x5e>
     5b8:	2b ed       	ldi	r18, 0xDB	; 219
     5ba:	3f e0       	ldi	r19, 0x0F	; 15
     5bc:	49 e4       	ldi	r20, 0x49	; 73
     5be:	50 fd       	sbrc	r21, 0
     5c0:	49 ec       	ldi	r20, 0xC9	; 201
     5c2:	0c 94 35 02 	jmp	0x46a	; 0x46a <__addsf3>
     5c6:	08 95       	ret

000005c8 <atan>:
     5c8:	df 93       	push	r29
     5ca:	dd 27       	eor	r29, r29
     5cc:	b9 2f       	mov	r27, r25
     5ce:	bf 77       	andi	r27, 0x7F	; 127
     5d0:	40 e8       	ldi	r20, 0x80	; 128
     5d2:	5f e3       	ldi	r21, 0x3F	; 63
     5d4:	16 16       	cp	r1, r22
     5d6:	17 06       	cpc	r1, r23
     5d8:	48 07       	cpc	r20, r24
     5da:	5b 07       	cpc	r21, r27
     5dc:	18 f4       	brcc	.+6      	; 0x5e4 <atan+0x1c>
     5de:	d9 2f       	mov	r29, r25
     5e0:	0e 94 9a 04 	call	0x934	; 0x934 <inverse>
     5e4:	9f 93       	push	r25
     5e6:	8f 93       	push	r24
     5e8:	7f 93       	push	r23
     5ea:	6f 93       	push	r22
     5ec:	0e 94 0f 05 	call	0xa1e	; 0xa1e <square>
     5f0:	e0 e7       	ldi	r30, 0x70	; 112
     5f2:	f0 e0       	ldi	r31, 0x00	; 0
     5f4:	0e 94 26 04 	call	0x84c	; 0x84c <__fp_powser>
     5f8:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__fp_round>
     5fc:	2f 91       	pop	r18
     5fe:	3f 91       	pop	r19
     600:	4f 91       	pop	r20
     602:	5f 91       	pop	r21
     604:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3x>
     608:	dd 23       	and	r29, r29
     60a:	51 f0       	breq	.+20     	; 0x620 <atan+0x58>
     60c:	90 58       	subi	r25, 0x80	; 128
     60e:	a2 ea       	ldi	r26, 0xA2	; 162
     610:	2a ed       	ldi	r18, 0xDA	; 218
     612:	3f e0       	ldi	r19, 0x0F	; 15
     614:	49 ec       	ldi	r20, 0xC9	; 201
     616:	5f e3       	ldi	r21, 0x3F	; 63
     618:	d0 78       	andi	r29, 0x80	; 128
     61a:	5d 27       	eor	r21, r29
     61c:	0e 94 4c 02 	call	0x498	; 0x498 <__addsf3x>
     620:	df 91       	pop	r29
     622:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__fp_round>

00000626 <__cmpsf2>:
     626:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__fp_cmp>
     62a:	08 f4       	brcc	.+2      	; 0x62e <__cmpsf2+0x8>
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	08 95       	ret
     630:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscB>
     634:	58 f0       	brcs	.+22     	; 0x64c <__cmpsf2+0x26>
     636:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_pscA>
     63a:	40 f0       	brcs	.+16     	; 0x64c <__cmpsf2+0x26>
     63c:	29 f4       	brne	.+10     	; 0x648 <__cmpsf2+0x22>
     63e:	5f 3f       	cpi	r21, 0xFF	; 255
     640:	29 f0       	breq	.+10     	; 0x64c <__cmpsf2+0x26>
     642:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_inf>
     646:	51 11       	cpse	r21, r1
     648:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__fp_szero>
     64c:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_nan>

00000650 <__divsf3x>:
     650:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__fp_split3>
     654:	68 f3       	brcs	.-38     	; 0x630 <__cmpsf2+0xa>

00000656 <__divsf3_pse>:
     656:	99 23       	and	r25, r25
     658:	b1 f3       	breq	.-20     	; 0x646 <__cmpsf2+0x20>
     65a:	55 23       	and	r21, r21
     65c:	91 f3       	breq	.-28     	; 0x642 <__cmpsf2+0x1c>
     65e:	95 1b       	sub	r25, r21
     660:	55 0b       	sbc	r21, r21
     662:	bb 27       	eor	r27, r27
     664:	aa 27       	eor	r26, r26
     666:	62 17       	cp	r22, r18
     668:	73 07       	cpc	r23, r19
     66a:	84 07       	cpc	r24, r20
     66c:	38 f0       	brcs	.+14     	; 0x67c <__divsf3_pse+0x26>
     66e:	9f 5f       	subi	r25, 0xFF	; 255
     670:	5f 4f       	sbci	r21, 0xFF	; 255
     672:	22 0f       	add	r18, r18
     674:	33 1f       	adc	r19, r19
     676:	44 1f       	adc	r20, r20
     678:	aa 1f       	adc	r26, r26
     67a:	a9 f3       	breq	.-22     	; 0x666 <__divsf3_pse+0x10>
     67c:	35 d0       	rcall	.+106    	; 0x6e8 <__divsf3_pse+0x92>
     67e:	0e 2e       	mov	r0, r30
     680:	3a f0       	brmi	.+14     	; 0x690 <__divsf3_pse+0x3a>
     682:	e0 e8       	ldi	r30, 0x80	; 128
     684:	32 d0       	rcall	.+100    	; 0x6ea <__divsf3_pse+0x94>
     686:	91 50       	subi	r25, 0x01	; 1
     688:	50 40       	sbci	r21, 0x00	; 0
     68a:	e6 95       	lsr	r30
     68c:	00 1c       	adc	r0, r0
     68e:	ca f7       	brpl	.-14     	; 0x682 <__divsf3_pse+0x2c>
     690:	2b d0       	rcall	.+86     	; 0x6e8 <__divsf3_pse+0x92>
     692:	fe 2f       	mov	r31, r30
     694:	29 d0       	rcall	.+82     	; 0x6e8 <__divsf3_pse+0x92>
     696:	66 0f       	add	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	88 1f       	adc	r24, r24
     69c:	bb 1f       	adc	r27, r27
     69e:	26 17       	cp	r18, r22
     6a0:	37 07       	cpc	r19, r23
     6a2:	48 07       	cpc	r20, r24
     6a4:	ab 07       	cpc	r26, r27
     6a6:	b0 e8       	ldi	r27, 0x80	; 128
     6a8:	09 f0       	breq	.+2      	; 0x6ac <__divsf3_pse+0x56>
     6aa:	bb 0b       	sbc	r27, r27
     6ac:	80 2d       	mov	r24, r0
     6ae:	bf 01       	movw	r22, r30
     6b0:	ff 27       	eor	r31, r31
     6b2:	93 58       	subi	r25, 0x83	; 131
     6b4:	5f 4f       	sbci	r21, 0xFF	; 255
     6b6:	3a f0       	brmi	.+14     	; 0x6c6 <__divsf3_pse+0x70>
     6b8:	9e 3f       	cpi	r25, 0xFE	; 254
     6ba:	51 05       	cpc	r21, r1
     6bc:	78 f0       	brcs	.+30     	; 0x6dc <__divsf3_pse+0x86>
     6be:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_inf>
     6c2:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__fp_szero>
     6c6:	5f 3f       	cpi	r21, 0xFF	; 255
     6c8:	e4 f3       	brlt	.-8      	; 0x6c2 <__divsf3_pse+0x6c>
     6ca:	98 3e       	cpi	r25, 0xE8	; 232
     6cc:	d4 f3       	brlt	.-12     	; 0x6c2 <__divsf3_pse+0x6c>
     6ce:	86 95       	lsr	r24
     6d0:	77 95       	ror	r23
     6d2:	67 95       	ror	r22
     6d4:	b7 95       	ror	r27
     6d6:	f7 95       	ror	r31
     6d8:	9f 5f       	subi	r25, 0xFF	; 255
     6da:	c9 f7       	brne	.-14     	; 0x6ce <__divsf3_pse+0x78>
     6dc:	88 0f       	add	r24, r24
     6de:	91 1d       	adc	r25, r1
     6e0:	96 95       	lsr	r25
     6e2:	87 95       	ror	r24
     6e4:	97 f9       	bld	r25, 7
     6e6:	08 95       	ret
     6e8:	e1 e0       	ldi	r30, 0x01	; 1
     6ea:	66 0f       	add	r22, r22
     6ec:	77 1f       	adc	r23, r23
     6ee:	88 1f       	adc	r24, r24
     6f0:	bb 1f       	adc	r27, r27
     6f2:	62 17       	cp	r22, r18
     6f4:	73 07       	cpc	r23, r19
     6f6:	84 07       	cpc	r24, r20
     6f8:	ba 07       	cpc	r27, r26
     6fa:	20 f0       	brcs	.+8      	; 0x704 <__divsf3_pse+0xae>
     6fc:	62 1b       	sub	r22, r18
     6fe:	73 0b       	sbc	r23, r19
     700:	84 0b       	sbc	r24, r20
     702:	ba 0b       	sbc	r27, r26
     704:	ee 1f       	adc	r30, r30
     706:	88 f7       	brcc	.-30     	; 0x6ea <__divsf3_pse+0x94>
     708:	e0 95       	com	r30
     70a:	08 95       	ret

0000070c <__fixsfsi>:
     70c:	0e 94 8d 03 	call	0x71a	; 0x71a <__fixunssfsi>
     710:	68 94       	set
     712:	b1 11       	cpse	r27, r1
     714:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__fp_szero>
     718:	08 95       	ret

0000071a <__fixunssfsi>:
     71a:	0e 94 74 04 	call	0x8e8	; 0x8e8 <__fp_splitA>
     71e:	88 f0       	brcs	.+34     	; 0x742 <__fixunssfsi+0x28>
     720:	9f 57       	subi	r25, 0x7F	; 127
     722:	98 f0       	brcs	.+38     	; 0x74a <__fixunssfsi+0x30>
     724:	b9 2f       	mov	r27, r25
     726:	99 27       	eor	r25, r25
     728:	b7 51       	subi	r27, 0x17	; 23
     72a:	b0 f0       	brcs	.+44     	; 0x758 <__fixunssfsi+0x3e>
     72c:	e1 f0       	breq	.+56     	; 0x766 <__fixunssfsi+0x4c>
     72e:	66 0f       	add	r22, r22
     730:	77 1f       	adc	r23, r23
     732:	88 1f       	adc	r24, r24
     734:	99 1f       	adc	r25, r25
     736:	1a f0       	brmi	.+6      	; 0x73e <__fixunssfsi+0x24>
     738:	ba 95       	dec	r27
     73a:	c9 f7       	brne	.-14     	; 0x72e <__fixunssfsi+0x14>
     73c:	14 c0       	rjmp	.+40     	; 0x766 <__fixunssfsi+0x4c>
     73e:	b1 30       	cpi	r27, 0x01	; 1
     740:	91 f0       	breq	.+36     	; 0x766 <__fixunssfsi+0x4c>
     742:	0e 94 8e 04 	call	0x91c	; 0x91c <__fp_zero>
     746:	b1 e0       	ldi	r27, 0x01	; 1
     748:	08 95       	ret
     74a:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_zero>
     74e:	67 2f       	mov	r22, r23
     750:	78 2f       	mov	r23, r24
     752:	88 27       	eor	r24, r24
     754:	b8 5f       	subi	r27, 0xF8	; 248
     756:	39 f0       	breq	.+14     	; 0x766 <__fixunssfsi+0x4c>
     758:	b9 3f       	cpi	r27, 0xF9	; 249
     75a:	cc f3       	brlt	.-14     	; 0x74e <__fixunssfsi+0x34>
     75c:	86 95       	lsr	r24
     75e:	77 95       	ror	r23
     760:	67 95       	ror	r22
     762:	b3 95       	inc	r27
     764:	d9 f7       	brne	.-10     	; 0x75c <__fixunssfsi+0x42>
     766:	3e f4       	brtc	.+14     	; 0x776 <__fixunssfsi+0x5c>
     768:	90 95       	com	r25
     76a:	80 95       	com	r24
     76c:	70 95       	com	r23
     76e:	61 95       	neg	r22
     770:	7f 4f       	sbci	r23, 0xFF	; 255
     772:	8f 4f       	sbci	r24, 0xFF	; 255
     774:	9f 4f       	sbci	r25, 0xFF	; 255
     776:	08 95       	ret

00000778 <__floatunsisf>:
     778:	e8 94       	clt
     77a:	09 c0       	rjmp	.+18     	; 0x78e <__floatsisf+0x12>

0000077c <__floatsisf>:
     77c:	97 fb       	bst	r25, 7
     77e:	3e f4       	brtc	.+14     	; 0x78e <__floatsisf+0x12>
     780:	90 95       	com	r25
     782:	80 95       	com	r24
     784:	70 95       	com	r23
     786:	61 95       	neg	r22
     788:	7f 4f       	sbci	r23, 0xFF	; 255
     78a:	8f 4f       	sbci	r24, 0xFF	; 255
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	99 23       	and	r25, r25
     790:	a9 f0       	breq	.+42     	; 0x7bc <__floatsisf+0x40>
     792:	f9 2f       	mov	r31, r25
     794:	96 e9       	ldi	r25, 0x96	; 150
     796:	bb 27       	eor	r27, r27
     798:	93 95       	inc	r25
     79a:	f6 95       	lsr	r31
     79c:	87 95       	ror	r24
     79e:	77 95       	ror	r23
     7a0:	67 95       	ror	r22
     7a2:	b7 95       	ror	r27
     7a4:	f1 11       	cpse	r31, r1
     7a6:	f8 cf       	rjmp	.-16     	; 0x798 <__floatsisf+0x1c>
     7a8:	fa f4       	brpl	.+62     	; 0x7e8 <__floatsisf+0x6c>
     7aa:	bb 0f       	add	r27, r27
     7ac:	11 f4       	brne	.+4      	; 0x7b2 <__floatsisf+0x36>
     7ae:	60 ff       	sbrs	r22, 0
     7b0:	1b c0       	rjmp	.+54     	; 0x7e8 <__floatsisf+0x6c>
     7b2:	6f 5f       	subi	r22, 0xFF	; 255
     7b4:	7f 4f       	sbci	r23, 0xFF	; 255
     7b6:	8f 4f       	sbci	r24, 0xFF	; 255
     7b8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ba:	16 c0       	rjmp	.+44     	; 0x7e8 <__floatsisf+0x6c>
     7bc:	88 23       	and	r24, r24
     7be:	11 f0       	breq	.+4      	; 0x7c4 <__floatsisf+0x48>
     7c0:	96 e9       	ldi	r25, 0x96	; 150
     7c2:	11 c0       	rjmp	.+34     	; 0x7e6 <__floatsisf+0x6a>
     7c4:	77 23       	and	r23, r23
     7c6:	21 f0       	breq	.+8      	; 0x7d0 <__floatsisf+0x54>
     7c8:	9e e8       	ldi	r25, 0x8E	; 142
     7ca:	87 2f       	mov	r24, r23
     7cc:	76 2f       	mov	r23, r22
     7ce:	05 c0       	rjmp	.+10     	; 0x7da <__floatsisf+0x5e>
     7d0:	66 23       	and	r22, r22
     7d2:	71 f0       	breq	.+28     	; 0x7f0 <__floatsisf+0x74>
     7d4:	96 e8       	ldi	r25, 0x86	; 134
     7d6:	86 2f       	mov	r24, r22
     7d8:	70 e0       	ldi	r23, 0x00	; 0
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	2a f0       	brmi	.+10     	; 0x7e8 <__floatsisf+0x6c>
     7de:	9a 95       	dec	r25
     7e0:	66 0f       	add	r22, r22
     7e2:	77 1f       	adc	r23, r23
     7e4:	88 1f       	adc	r24, r24
     7e6:	da f7       	brpl	.-10     	; 0x7de <__floatsisf+0x62>
     7e8:	88 0f       	add	r24, r24
     7ea:	96 95       	lsr	r25
     7ec:	87 95       	ror	r24
     7ee:	97 f9       	bld	r25, 7
     7f0:	08 95       	ret

000007f2 <__fp_cmp>:
     7f2:	99 0f       	add	r25, r25
     7f4:	00 08       	sbc	r0, r0
     7f6:	55 0f       	add	r21, r21
     7f8:	aa 0b       	sbc	r26, r26
     7fa:	e0 e8       	ldi	r30, 0x80	; 128
     7fc:	fe ef       	ldi	r31, 0xFE	; 254
     7fe:	16 16       	cp	r1, r22
     800:	17 06       	cpc	r1, r23
     802:	e8 07       	cpc	r30, r24
     804:	f9 07       	cpc	r31, r25
     806:	c0 f0       	brcs	.+48     	; 0x838 <__fp_cmp+0x46>
     808:	12 16       	cp	r1, r18
     80a:	13 06       	cpc	r1, r19
     80c:	e4 07       	cpc	r30, r20
     80e:	f5 07       	cpc	r31, r21
     810:	98 f0       	brcs	.+38     	; 0x838 <__fp_cmp+0x46>
     812:	62 1b       	sub	r22, r18
     814:	73 0b       	sbc	r23, r19
     816:	84 0b       	sbc	r24, r20
     818:	95 0b       	sbc	r25, r21
     81a:	39 f4       	brne	.+14     	; 0x82a <__fp_cmp+0x38>
     81c:	0a 26       	eor	r0, r26
     81e:	61 f0       	breq	.+24     	; 0x838 <__fp_cmp+0x46>
     820:	23 2b       	or	r18, r19
     822:	24 2b       	or	r18, r20
     824:	25 2b       	or	r18, r21
     826:	21 f4       	brne	.+8      	; 0x830 <__fp_cmp+0x3e>
     828:	08 95       	ret
     82a:	0a 26       	eor	r0, r26
     82c:	09 f4       	brne	.+2      	; 0x830 <__fp_cmp+0x3e>
     82e:	a1 40       	sbci	r26, 0x01	; 1
     830:	a6 95       	lsr	r26
     832:	8f ef       	ldi	r24, 0xFF	; 255
     834:	81 1d       	adc	r24, r1
     836:	81 1d       	adc	r24, r1
     838:	08 95       	ret

0000083a <__fp_inf>:
     83a:	97 f9       	bld	r25, 7
     83c:	9f 67       	ori	r25, 0x7F	; 127
     83e:	80 e8       	ldi	r24, 0x80	; 128
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	60 e0       	ldi	r22, 0x00	; 0
     844:	08 95       	ret

00000846 <__fp_nan>:
     846:	9f ef       	ldi	r25, 0xFF	; 255
     848:	80 ec       	ldi	r24, 0xC0	; 192
     84a:	08 95       	ret

0000084c <__fp_powser>:
     84c:	df 93       	push	r29
     84e:	cf 93       	push	r28
     850:	1f 93       	push	r17
     852:	0f 93       	push	r16
     854:	ff 92       	push	r15
     856:	ef 92       	push	r14
     858:	df 92       	push	r13
     85a:	7b 01       	movw	r14, r22
     85c:	8c 01       	movw	r16, r24
     85e:	68 94       	set
     860:	06 c0       	rjmp	.+12     	; 0x86e <__fp_powser+0x22>
     862:	da 2e       	mov	r13, r26
     864:	ef 01       	movw	r28, r30
     866:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3x>
     86a:	fe 01       	movw	r30, r28
     86c:	e8 94       	clt
     86e:	a5 91       	lpm	r26, Z+
     870:	25 91       	lpm	r18, Z+
     872:	35 91       	lpm	r19, Z+
     874:	45 91       	lpm	r20, Z+
     876:	55 91       	lpm	r21, Z+
     878:	a6 f3       	brts	.-24     	; 0x862 <__fp_powser+0x16>
     87a:	ef 01       	movw	r28, r30
     87c:	0e 94 4c 02 	call	0x498	; 0x498 <__addsf3x>
     880:	fe 01       	movw	r30, r28
     882:	97 01       	movw	r18, r14
     884:	a8 01       	movw	r20, r16
     886:	da 94       	dec	r13
     888:	69 f7       	brne	.-38     	; 0x864 <__fp_powser+0x18>
     88a:	df 90       	pop	r13
     88c:	ef 90       	pop	r14
     88e:	ff 90       	pop	r15
     890:	0f 91       	pop	r16
     892:	1f 91       	pop	r17
     894:	cf 91       	pop	r28
     896:	df 91       	pop	r29
     898:	08 95       	ret

0000089a <__fp_pscA>:
     89a:	00 24       	eor	r0, r0
     89c:	0a 94       	dec	r0
     89e:	16 16       	cp	r1, r22
     8a0:	17 06       	cpc	r1, r23
     8a2:	18 06       	cpc	r1, r24
     8a4:	09 06       	cpc	r0, r25
     8a6:	08 95       	ret

000008a8 <__fp_pscB>:
     8a8:	00 24       	eor	r0, r0
     8aa:	0a 94       	dec	r0
     8ac:	12 16       	cp	r1, r18
     8ae:	13 06       	cpc	r1, r19
     8b0:	14 06       	cpc	r1, r20
     8b2:	05 06       	cpc	r0, r21
     8b4:	08 95       	ret

000008b6 <__fp_round>:
     8b6:	09 2e       	mov	r0, r25
     8b8:	03 94       	inc	r0
     8ba:	00 0c       	add	r0, r0
     8bc:	11 f4       	brne	.+4      	; 0x8c2 <__fp_round+0xc>
     8be:	88 23       	and	r24, r24
     8c0:	52 f0       	brmi	.+20     	; 0x8d6 <__fp_round+0x20>
     8c2:	bb 0f       	add	r27, r27
     8c4:	40 f4       	brcc	.+16     	; 0x8d6 <__fp_round+0x20>
     8c6:	bf 2b       	or	r27, r31
     8c8:	11 f4       	brne	.+4      	; 0x8ce <__fp_round+0x18>
     8ca:	60 ff       	sbrs	r22, 0
     8cc:	04 c0       	rjmp	.+8      	; 0x8d6 <__fp_round+0x20>
     8ce:	6f 5f       	subi	r22, 0xFF	; 255
     8d0:	7f 4f       	sbci	r23, 0xFF	; 255
     8d2:	8f 4f       	sbci	r24, 0xFF	; 255
     8d4:	9f 4f       	sbci	r25, 0xFF	; 255
     8d6:	08 95       	ret

000008d8 <__fp_split3>:
     8d8:	57 fd       	sbrc	r21, 7
     8da:	90 58       	subi	r25, 0x80	; 128
     8dc:	44 0f       	add	r20, r20
     8de:	55 1f       	adc	r21, r21
     8e0:	59 f0       	breq	.+22     	; 0x8f8 <__fp_splitA+0x10>
     8e2:	5f 3f       	cpi	r21, 0xFF	; 255
     8e4:	71 f0       	breq	.+28     	; 0x902 <__fp_splitA+0x1a>
     8e6:	47 95       	ror	r20

000008e8 <__fp_splitA>:
     8e8:	88 0f       	add	r24, r24
     8ea:	97 fb       	bst	r25, 7
     8ec:	99 1f       	adc	r25, r25
     8ee:	61 f0       	breq	.+24     	; 0x908 <__fp_splitA+0x20>
     8f0:	9f 3f       	cpi	r25, 0xFF	; 255
     8f2:	79 f0       	breq	.+30     	; 0x912 <__fp_splitA+0x2a>
     8f4:	87 95       	ror	r24
     8f6:	08 95       	ret
     8f8:	12 16       	cp	r1, r18
     8fa:	13 06       	cpc	r1, r19
     8fc:	14 06       	cpc	r1, r20
     8fe:	55 1f       	adc	r21, r21
     900:	f2 cf       	rjmp	.-28     	; 0x8e6 <__fp_split3+0xe>
     902:	46 95       	lsr	r20
     904:	f1 df       	rcall	.-30     	; 0x8e8 <__fp_splitA>
     906:	08 c0       	rjmp	.+16     	; 0x918 <__fp_splitA+0x30>
     908:	16 16       	cp	r1, r22
     90a:	17 06       	cpc	r1, r23
     90c:	18 06       	cpc	r1, r24
     90e:	99 1f       	adc	r25, r25
     910:	f1 cf       	rjmp	.-30     	; 0x8f4 <__fp_splitA+0xc>
     912:	86 95       	lsr	r24
     914:	71 05       	cpc	r23, r1
     916:	61 05       	cpc	r22, r1
     918:	08 94       	sec
     91a:	08 95       	ret

0000091c <__fp_zero>:
     91c:	e8 94       	clt

0000091e <__fp_szero>:
     91e:	bb 27       	eor	r27, r27
     920:	66 27       	eor	r22, r22
     922:	77 27       	eor	r23, r23
     924:	cb 01       	movw	r24, r22
     926:	97 f9       	bld	r25, 7
     928:	08 95       	ret

0000092a <__gesf2>:
     92a:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__fp_cmp>
     92e:	08 f4       	brcc	.+2      	; 0x932 <__gesf2+0x8>
     930:	8f ef       	ldi	r24, 0xFF	; 255
     932:	08 95       	ret

00000934 <inverse>:
     934:	9b 01       	movw	r18, r22
     936:	ac 01       	movw	r20, r24
     938:	60 e0       	ldi	r22, 0x00	; 0
     93a:	70 e0       	ldi	r23, 0x00	; 0
     93c:	80 e8       	ldi	r24, 0x80	; 128
     93e:	9f e3       	ldi	r25, 0x3F	; 63
     940:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__divsf3>

00000944 <__mulsf3>:
     944:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3x>
     948:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__fp_round>
     94c:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_pscA>
     950:	38 f0       	brcs	.+14     	; 0x960 <__mulsf3+0x1c>
     952:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_pscB>
     956:	20 f0       	brcs	.+8      	; 0x960 <__mulsf3+0x1c>
     958:	95 23       	and	r25, r21
     95a:	11 f0       	breq	.+4      	; 0x960 <__mulsf3+0x1c>
     95c:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_inf>
     960:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_nan>
     964:	11 24       	eor	r1, r1
     966:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__fp_szero>

0000096a <__mulsf3x>:
     96a:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__fp_split3>
     96e:	70 f3       	brcs	.-36     	; 0x94c <__mulsf3+0x8>

00000970 <__mulsf3_pse>:
     970:	95 9f       	mul	r25, r21
     972:	c1 f3       	breq	.-16     	; 0x964 <__mulsf3+0x20>
     974:	95 0f       	add	r25, r21
     976:	50 e0       	ldi	r21, 0x00	; 0
     978:	55 1f       	adc	r21, r21
     97a:	62 9f       	mul	r22, r18
     97c:	f0 01       	movw	r30, r0
     97e:	72 9f       	mul	r23, r18
     980:	bb 27       	eor	r27, r27
     982:	f0 0d       	add	r31, r0
     984:	b1 1d       	adc	r27, r1
     986:	63 9f       	mul	r22, r19
     988:	aa 27       	eor	r26, r26
     98a:	f0 0d       	add	r31, r0
     98c:	b1 1d       	adc	r27, r1
     98e:	aa 1f       	adc	r26, r26
     990:	64 9f       	mul	r22, r20
     992:	66 27       	eor	r22, r22
     994:	b0 0d       	add	r27, r0
     996:	a1 1d       	adc	r26, r1
     998:	66 1f       	adc	r22, r22
     99a:	82 9f       	mul	r24, r18
     99c:	22 27       	eor	r18, r18
     99e:	b0 0d       	add	r27, r0
     9a0:	a1 1d       	adc	r26, r1
     9a2:	62 1f       	adc	r22, r18
     9a4:	73 9f       	mul	r23, r19
     9a6:	b0 0d       	add	r27, r0
     9a8:	a1 1d       	adc	r26, r1
     9aa:	62 1f       	adc	r22, r18
     9ac:	83 9f       	mul	r24, r19
     9ae:	a0 0d       	add	r26, r0
     9b0:	61 1d       	adc	r22, r1
     9b2:	22 1f       	adc	r18, r18
     9b4:	74 9f       	mul	r23, r20
     9b6:	33 27       	eor	r19, r19
     9b8:	a0 0d       	add	r26, r0
     9ba:	61 1d       	adc	r22, r1
     9bc:	23 1f       	adc	r18, r19
     9be:	84 9f       	mul	r24, r20
     9c0:	60 0d       	add	r22, r0
     9c2:	21 1d       	adc	r18, r1
     9c4:	82 2f       	mov	r24, r18
     9c6:	76 2f       	mov	r23, r22
     9c8:	6a 2f       	mov	r22, r26
     9ca:	11 24       	eor	r1, r1
     9cc:	9f 57       	subi	r25, 0x7F	; 127
     9ce:	50 40       	sbci	r21, 0x00	; 0
     9d0:	9a f0       	brmi	.+38     	; 0x9f8 <__mulsf3_pse+0x88>
     9d2:	f1 f0       	breq	.+60     	; 0xa10 <__mulsf3_pse+0xa0>
     9d4:	88 23       	and	r24, r24
     9d6:	4a f0       	brmi	.+18     	; 0x9ea <__mulsf3_pse+0x7a>
     9d8:	ee 0f       	add	r30, r30
     9da:	ff 1f       	adc	r31, r31
     9dc:	bb 1f       	adc	r27, r27
     9de:	66 1f       	adc	r22, r22
     9e0:	77 1f       	adc	r23, r23
     9e2:	88 1f       	adc	r24, r24
     9e4:	91 50       	subi	r25, 0x01	; 1
     9e6:	50 40       	sbci	r21, 0x00	; 0
     9e8:	a9 f7       	brne	.-22     	; 0x9d4 <__mulsf3_pse+0x64>
     9ea:	9e 3f       	cpi	r25, 0xFE	; 254
     9ec:	51 05       	cpc	r21, r1
     9ee:	80 f0       	brcs	.+32     	; 0xa10 <__mulsf3_pse+0xa0>
     9f0:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_inf>
     9f4:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__fp_szero>
     9f8:	5f 3f       	cpi	r21, 0xFF	; 255
     9fa:	e4 f3       	brlt	.-8      	; 0x9f4 <__mulsf3_pse+0x84>
     9fc:	98 3e       	cpi	r25, 0xE8	; 232
     9fe:	d4 f3       	brlt	.-12     	; 0x9f4 <__mulsf3_pse+0x84>
     a00:	86 95       	lsr	r24
     a02:	77 95       	ror	r23
     a04:	67 95       	ror	r22
     a06:	b7 95       	ror	r27
     a08:	f7 95       	ror	r31
     a0a:	e7 95       	ror	r30
     a0c:	9f 5f       	subi	r25, 0xFF	; 255
     a0e:	c1 f7       	brne	.-16     	; 0xa00 <__mulsf3_pse+0x90>
     a10:	fe 2b       	or	r31, r30
     a12:	88 0f       	add	r24, r24
     a14:	91 1d       	adc	r25, r1
     a16:	96 95       	lsr	r25
     a18:	87 95       	ror	r24
     a1a:	97 f9       	bld	r25, 7
     a1c:	08 95       	ret

00000a1e <square>:
     a1e:	9b 01       	movw	r18, r22
     a20:	ac 01       	movw	r20, r24
     a22:	0c 94 a2 04 	jmp	0x944	; 0x944 <__mulsf3>

00000a26 <__divsf3>:
     a26:	0e 94 28 03 	call	0x650	; 0x650 <__divsf3x>
     a2a:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__fp_round>

00000a2e <fdevopen>:
     a2e:	0f 93       	push	r16
     a30:	1f 93       	push	r17
     a32:	cf 93       	push	r28
     a34:	df 93       	push	r29
     a36:	00 97       	sbiw	r24, 0x00	; 0
     a38:	31 f4       	brne	.+12     	; 0xa46 <fdevopen+0x18>
     a3a:	61 15       	cp	r22, r1
     a3c:	71 05       	cpc	r23, r1
     a3e:	19 f4       	brne	.+6      	; 0xa46 <fdevopen+0x18>
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	3a c0       	rjmp	.+116    	; 0xaba <fdevopen+0x8c>
     a46:	8b 01       	movw	r16, r22
     a48:	ec 01       	movw	r28, r24
     a4a:	6e e0       	ldi	r22, 0x0E	; 14
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	0e 94 59 07 	call	0xeb2	; 0xeb2 <calloc>
     a56:	fc 01       	movw	r30, r24
     a58:	89 2b       	or	r24, r25
     a5a:	91 f3       	breq	.-28     	; 0xa40 <fdevopen+0x12>
     a5c:	80 e8       	ldi	r24, 0x80	; 128
     a5e:	83 83       	std	Z+3, r24	; 0x03
     a60:	01 15       	cp	r16, r1
     a62:	11 05       	cpc	r17, r1
     a64:	71 f0       	breq	.+28     	; 0xa82 <fdevopen+0x54>
     a66:	13 87       	std	Z+11, r17	; 0x0b
     a68:	02 87       	std	Z+10, r16	; 0x0a
     a6a:	81 e8       	ldi	r24, 0x81	; 129
     a6c:	83 83       	std	Z+3, r24	; 0x03
     a6e:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
     a72:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
     a76:	89 2b       	or	r24, r25
     a78:	21 f4       	brne	.+8      	; 0xa82 <fdevopen+0x54>
     a7a:	f0 93 51 01 	sts	0x0151, r31	; 0x800151 <__data_end+0x1>
     a7e:	e0 93 50 01 	sts	0x0150, r30	; 0x800150 <__data_end>
     a82:	20 97       	sbiw	r28, 0x00	; 0
     a84:	c9 f0       	breq	.+50     	; 0xab8 <fdevopen+0x8a>
     a86:	d1 87       	std	Z+9, r29	; 0x09
     a88:	c0 87       	std	Z+8, r28	; 0x08
     a8a:	83 81       	ldd	r24, Z+3	; 0x03
     a8c:	82 60       	ori	r24, 0x02	; 2
     a8e:	83 83       	std	Z+3, r24	; 0x03
     a90:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end+0x2>
     a94:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__data_end+0x3>
     a98:	89 2b       	or	r24, r25
     a9a:	71 f4       	brne	.+28     	; 0xab8 <fdevopen+0x8a>
     a9c:	f0 93 53 01 	sts	0x0153, r31	; 0x800153 <__data_end+0x3>
     aa0:	e0 93 52 01 	sts	0x0152, r30	; 0x800152 <__data_end+0x2>
     aa4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end+0x4>
     aa8:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__data_end+0x5>
     aac:	89 2b       	or	r24, r25
     aae:	21 f4       	brne	.+8      	; 0xab8 <fdevopen+0x8a>
     ab0:	f0 93 55 01 	sts	0x0155, r31	; 0x800155 <__data_end+0x5>
     ab4:	e0 93 54 01 	sts	0x0154, r30	; 0x800154 <__data_end+0x4>
     ab8:	cf 01       	movw	r24, r30
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	1f 91       	pop	r17
     ac0:	0f 91       	pop	r16
     ac2:	08 95       	ret

00000ac4 <printf>:
     ac4:	a0 e0       	ldi	r26, 0x00	; 0
     ac6:	b0 e0       	ldi	r27, 0x00	; 0
     ac8:	e8 e6       	ldi	r30, 0x68	; 104
     aca:	f5 e0       	ldi	r31, 0x05	; 5
     acc:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__prologue_saves__+0x20>
     ad0:	ae 01       	movw	r20, r28
     ad2:	4b 5f       	subi	r20, 0xFB	; 251
     ad4:	5f 4f       	sbci	r21, 0xFF	; 255
     ad6:	fa 01       	movw	r30, r20
     ad8:	61 91       	ld	r22, Z+
     ada:	71 91       	ld	r23, Z+
     adc:	af 01       	movw	r20, r30
     ade:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end+0x2>
     ae2:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__data_end+0x3>
     ae6:	0e 94 78 05 	call	0xaf0	; 0xaf0 <vfprintf>
     aea:	e2 e0       	ldi	r30, 0x02	; 2
     aec:	0c 94 79 09 	jmp	0x12f2	; 0x12f2 <__epilogue_restores__+0x20>

00000af0 <vfprintf>:
     af0:	ab e0       	ldi	r26, 0x0B	; 11
     af2:	b0 e0       	ldi	r27, 0x00	; 0
     af4:	ee e7       	ldi	r30, 0x7E	; 126
     af6:	f5 e0       	ldi	r31, 0x05	; 5
     af8:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__prologue_saves__>
     afc:	6c 01       	movw	r12, r24
     afe:	7b 01       	movw	r14, r22
     b00:	8a 01       	movw	r16, r20
     b02:	fc 01       	movw	r30, r24
     b04:	17 82       	std	Z+7, r1	; 0x07
     b06:	16 82       	std	Z+6, r1	; 0x06
     b08:	83 81       	ldd	r24, Z+3	; 0x03
     b0a:	81 ff       	sbrs	r24, 1
     b0c:	cc c1       	rjmp	.+920    	; 0xea6 <vfprintf+0x3b6>
     b0e:	ce 01       	movw	r24, r28
     b10:	01 96       	adiw	r24, 0x01	; 1
     b12:	3c 01       	movw	r6, r24
     b14:	f6 01       	movw	r30, r12
     b16:	93 81       	ldd	r25, Z+3	; 0x03
     b18:	f7 01       	movw	r30, r14
     b1a:	93 fd       	sbrc	r25, 3
     b1c:	85 91       	lpm	r24, Z+
     b1e:	93 ff       	sbrs	r25, 3
     b20:	81 91       	ld	r24, Z+
     b22:	7f 01       	movw	r14, r30
     b24:	88 23       	and	r24, r24
     b26:	09 f4       	brne	.+2      	; 0xb2a <vfprintf+0x3a>
     b28:	ba c1       	rjmp	.+884    	; 0xe9e <vfprintf+0x3ae>
     b2a:	85 32       	cpi	r24, 0x25	; 37
     b2c:	39 f4       	brne	.+14     	; 0xb3c <vfprintf+0x4c>
     b2e:	93 fd       	sbrc	r25, 3
     b30:	85 91       	lpm	r24, Z+
     b32:	93 ff       	sbrs	r25, 3
     b34:	81 91       	ld	r24, Z+
     b36:	7f 01       	movw	r14, r30
     b38:	85 32       	cpi	r24, 0x25	; 37
     b3a:	29 f4       	brne	.+10     	; 0xb46 <vfprintf+0x56>
     b3c:	b6 01       	movw	r22, r12
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     b44:	e7 cf       	rjmp	.-50     	; 0xb14 <vfprintf+0x24>
     b46:	91 2c       	mov	r9, r1
     b48:	21 2c       	mov	r2, r1
     b4a:	31 2c       	mov	r3, r1
     b4c:	ff e1       	ldi	r31, 0x1F	; 31
     b4e:	f3 15       	cp	r31, r3
     b50:	d8 f0       	brcs	.+54     	; 0xb88 <vfprintf+0x98>
     b52:	8b 32       	cpi	r24, 0x2B	; 43
     b54:	79 f0       	breq	.+30     	; 0xb74 <vfprintf+0x84>
     b56:	38 f4       	brcc	.+14     	; 0xb66 <vfprintf+0x76>
     b58:	80 32       	cpi	r24, 0x20	; 32
     b5a:	79 f0       	breq	.+30     	; 0xb7a <vfprintf+0x8a>
     b5c:	83 32       	cpi	r24, 0x23	; 35
     b5e:	a1 f4       	brne	.+40     	; 0xb88 <vfprintf+0x98>
     b60:	23 2d       	mov	r18, r3
     b62:	20 61       	ori	r18, 0x10	; 16
     b64:	1d c0       	rjmp	.+58     	; 0xba0 <vfprintf+0xb0>
     b66:	8d 32       	cpi	r24, 0x2D	; 45
     b68:	61 f0       	breq	.+24     	; 0xb82 <vfprintf+0x92>
     b6a:	80 33       	cpi	r24, 0x30	; 48
     b6c:	69 f4       	brne	.+26     	; 0xb88 <vfprintf+0x98>
     b6e:	23 2d       	mov	r18, r3
     b70:	21 60       	ori	r18, 0x01	; 1
     b72:	16 c0       	rjmp	.+44     	; 0xba0 <vfprintf+0xb0>
     b74:	83 2d       	mov	r24, r3
     b76:	82 60       	ori	r24, 0x02	; 2
     b78:	38 2e       	mov	r3, r24
     b7a:	e3 2d       	mov	r30, r3
     b7c:	e4 60       	ori	r30, 0x04	; 4
     b7e:	3e 2e       	mov	r3, r30
     b80:	2a c0       	rjmp	.+84     	; 0xbd6 <vfprintf+0xe6>
     b82:	f3 2d       	mov	r31, r3
     b84:	f8 60       	ori	r31, 0x08	; 8
     b86:	1d c0       	rjmp	.+58     	; 0xbc2 <vfprintf+0xd2>
     b88:	37 fc       	sbrc	r3, 7
     b8a:	2d c0       	rjmp	.+90     	; 0xbe6 <vfprintf+0xf6>
     b8c:	20 ed       	ldi	r18, 0xD0	; 208
     b8e:	28 0f       	add	r18, r24
     b90:	2a 30       	cpi	r18, 0x0A	; 10
     b92:	40 f0       	brcs	.+16     	; 0xba4 <vfprintf+0xb4>
     b94:	8e 32       	cpi	r24, 0x2E	; 46
     b96:	b9 f4       	brne	.+46     	; 0xbc6 <vfprintf+0xd6>
     b98:	36 fc       	sbrc	r3, 6
     b9a:	81 c1       	rjmp	.+770    	; 0xe9e <vfprintf+0x3ae>
     b9c:	23 2d       	mov	r18, r3
     b9e:	20 64       	ori	r18, 0x40	; 64
     ba0:	32 2e       	mov	r3, r18
     ba2:	19 c0       	rjmp	.+50     	; 0xbd6 <vfprintf+0xe6>
     ba4:	36 fe       	sbrs	r3, 6
     ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <vfprintf+0xc4>
     ba8:	8a e0       	ldi	r24, 0x0A	; 10
     baa:	98 9e       	mul	r9, r24
     bac:	20 0d       	add	r18, r0
     bae:	11 24       	eor	r1, r1
     bb0:	92 2e       	mov	r9, r18
     bb2:	11 c0       	rjmp	.+34     	; 0xbd6 <vfprintf+0xe6>
     bb4:	ea e0       	ldi	r30, 0x0A	; 10
     bb6:	2e 9e       	mul	r2, r30
     bb8:	20 0d       	add	r18, r0
     bba:	11 24       	eor	r1, r1
     bbc:	22 2e       	mov	r2, r18
     bbe:	f3 2d       	mov	r31, r3
     bc0:	f0 62       	ori	r31, 0x20	; 32
     bc2:	3f 2e       	mov	r3, r31
     bc4:	08 c0       	rjmp	.+16     	; 0xbd6 <vfprintf+0xe6>
     bc6:	8c 36       	cpi	r24, 0x6C	; 108
     bc8:	21 f4       	brne	.+8      	; 0xbd2 <vfprintf+0xe2>
     bca:	83 2d       	mov	r24, r3
     bcc:	80 68       	ori	r24, 0x80	; 128
     bce:	38 2e       	mov	r3, r24
     bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <vfprintf+0xe6>
     bd2:	88 36       	cpi	r24, 0x68	; 104
     bd4:	41 f4       	brne	.+16     	; 0xbe6 <vfprintf+0xf6>
     bd6:	f7 01       	movw	r30, r14
     bd8:	93 fd       	sbrc	r25, 3
     bda:	85 91       	lpm	r24, Z+
     bdc:	93 ff       	sbrs	r25, 3
     bde:	81 91       	ld	r24, Z+
     be0:	7f 01       	movw	r14, r30
     be2:	81 11       	cpse	r24, r1
     be4:	b3 cf       	rjmp	.-154    	; 0xb4c <vfprintf+0x5c>
     be6:	98 2f       	mov	r25, r24
     be8:	9f 7d       	andi	r25, 0xDF	; 223
     bea:	95 54       	subi	r25, 0x45	; 69
     bec:	93 30       	cpi	r25, 0x03	; 3
     bee:	28 f4       	brcc	.+10     	; 0xbfa <vfprintf+0x10a>
     bf0:	0c 5f       	subi	r16, 0xFC	; 252
     bf2:	1f 4f       	sbci	r17, 0xFF	; 255
     bf4:	9f e3       	ldi	r25, 0x3F	; 63
     bf6:	99 83       	std	Y+1, r25	; 0x01
     bf8:	0d c0       	rjmp	.+26     	; 0xc14 <vfprintf+0x124>
     bfa:	83 36       	cpi	r24, 0x63	; 99
     bfc:	31 f0       	breq	.+12     	; 0xc0a <vfprintf+0x11a>
     bfe:	83 37       	cpi	r24, 0x73	; 115
     c00:	71 f0       	breq	.+28     	; 0xc1e <vfprintf+0x12e>
     c02:	83 35       	cpi	r24, 0x53	; 83
     c04:	09 f0       	breq	.+2      	; 0xc08 <vfprintf+0x118>
     c06:	59 c0       	rjmp	.+178    	; 0xcba <vfprintf+0x1ca>
     c08:	21 c0       	rjmp	.+66     	; 0xc4c <vfprintf+0x15c>
     c0a:	f8 01       	movw	r30, r16
     c0c:	80 81       	ld	r24, Z
     c0e:	89 83       	std	Y+1, r24	; 0x01
     c10:	0e 5f       	subi	r16, 0xFE	; 254
     c12:	1f 4f       	sbci	r17, 0xFF	; 255
     c14:	88 24       	eor	r8, r8
     c16:	83 94       	inc	r8
     c18:	91 2c       	mov	r9, r1
     c1a:	53 01       	movw	r10, r6
     c1c:	13 c0       	rjmp	.+38     	; 0xc44 <vfprintf+0x154>
     c1e:	28 01       	movw	r4, r16
     c20:	f2 e0       	ldi	r31, 0x02	; 2
     c22:	4f 0e       	add	r4, r31
     c24:	51 1c       	adc	r5, r1
     c26:	f8 01       	movw	r30, r16
     c28:	a0 80       	ld	r10, Z
     c2a:	b1 80       	ldd	r11, Z+1	; 0x01
     c2c:	36 fe       	sbrs	r3, 6
     c2e:	03 c0       	rjmp	.+6      	; 0xc36 <vfprintf+0x146>
     c30:	69 2d       	mov	r22, r9
     c32:	70 e0       	ldi	r23, 0x00	; 0
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <vfprintf+0x14a>
     c36:	6f ef       	ldi	r22, 0xFF	; 255
     c38:	7f ef       	ldi	r23, 0xFF	; 255
     c3a:	c5 01       	movw	r24, r10
     c3c:	0e 94 a8 08 	call	0x1150	; 0x1150 <strnlen>
     c40:	4c 01       	movw	r8, r24
     c42:	82 01       	movw	r16, r4
     c44:	f3 2d       	mov	r31, r3
     c46:	ff 77       	andi	r31, 0x7F	; 127
     c48:	3f 2e       	mov	r3, r31
     c4a:	16 c0       	rjmp	.+44     	; 0xc78 <vfprintf+0x188>
     c4c:	28 01       	movw	r4, r16
     c4e:	22 e0       	ldi	r18, 0x02	; 2
     c50:	42 0e       	add	r4, r18
     c52:	51 1c       	adc	r5, r1
     c54:	f8 01       	movw	r30, r16
     c56:	a0 80       	ld	r10, Z
     c58:	b1 80       	ldd	r11, Z+1	; 0x01
     c5a:	36 fe       	sbrs	r3, 6
     c5c:	03 c0       	rjmp	.+6      	; 0xc64 <vfprintf+0x174>
     c5e:	69 2d       	mov	r22, r9
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <vfprintf+0x178>
     c64:	6f ef       	ldi	r22, 0xFF	; 255
     c66:	7f ef       	ldi	r23, 0xFF	; 255
     c68:	c5 01       	movw	r24, r10
     c6a:	0e 94 96 08 	call	0x112c	; 0x112c <strnlen_P>
     c6e:	4c 01       	movw	r8, r24
     c70:	f3 2d       	mov	r31, r3
     c72:	f0 68       	ori	r31, 0x80	; 128
     c74:	3f 2e       	mov	r3, r31
     c76:	82 01       	movw	r16, r4
     c78:	33 fc       	sbrc	r3, 3
     c7a:	1b c0       	rjmp	.+54     	; 0xcb2 <vfprintf+0x1c2>
     c7c:	82 2d       	mov	r24, r2
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	88 16       	cp	r8, r24
     c82:	99 06       	cpc	r9, r25
     c84:	b0 f4       	brcc	.+44     	; 0xcb2 <vfprintf+0x1c2>
     c86:	b6 01       	movw	r22, r12
     c88:	80 e2       	ldi	r24, 0x20	; 32
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     c90:	2a 94       	dec	r2
     c92:	f4 cf       	rjmp	.-24     	; 0xc7c <vfprintf+0x18c>
     c94:	f5 01       	movw	r30, r10
     c96:	37 fc       	sbrc	r3, 7
     c98:	85 91       	lpm	r24, Z+
     c9a:	37 fe       	sbrs	r3, 7
     c9c:	81 91       	ld	r24, Z+
     c9e:	5f 01       	movw	r10, r30
     ca0:	b6 01       	movw	r22, r12
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     ca8:	21 10       	cpse	r2, r1
     caa:	2a 94       	dec	r2
     cac:	21 e0       	ldi	r18, 0x01	; 1
     cae:	82 1a       	sub	r8, r18
     cb0:	91 08       	sbc	r9, r1
     cb2:	81 14       	cp	r8, r1
     cb4:	91 04       	cpc	r9, r1
     cb6:	71 f7       	brne	.-36     	; 0xc94 <vfprintf+0x1a4>
     cb8:	e8 c0       	rjmp	.+464    	; 0xe8a <vfprintf+0x39a>
     cba:	84 36       	cpi	r24, 0x64	; 100
     cbc:	11 f0       	breq	.+4      	; 0xcc2 <vfprintf+0x1d2>
     cbe:	89 36       	cpi	r24, 0x69	; 105
     cc0:	41 f5       	brne	.+80     	; 0xd12 <vfprintf+0x222>
     cc2:	f8 01       	movw	r30, r16
     cc4:	37 fe       	sbrs	r3, 7
     cc6:	07 c0       	rjmp	.+14     	; 0xcd6 <vfprintf+0x1e6>
     cc8:	60 81       	ld	r22, Z
     cca:	71 81       	ldd	r23, Z+1	; 0x01
     ccc:	82 81       	ldd	r24, Z+2	; 0x02
     cce:	93 81       	ldd	r25, Z+3	; 0x03
     cd0:	0c 5f       	subi	r16, 0xFC	; 252
     cd2:	1f 4f       	sbci	r17, 0xFF	; 255
     cd4:	08 c0       	rjmp	.+16     	; 0xce6 <vfprintf+0x1f6>
     cd6:	60 81       	ld	r22, Z
     cd8:	71 81       	ldd	r23, Z+1	; 0x01
     cda:	07 2e       	mov	r0, r23
     cdc:	00 0c       	add	r0, r0
     cde:	88 0b       	sbc	r24, r24
     ce0:	99 0b       	sbc	r25, r25
     ce2:	0e 5f       	subi	r16, 0xFE	; 254
     ce4:	1f 4f       	sbci	r17, 0xFF	; 255
     ce6:	f3 2d       	mov	r31, r3
     ce8:	ff 76       	andi	r31, 0x6F	; 111
     cea:	3f 2e       	mov	r3, r31
     cec:	97 ff       	sbrs	r25, 7
     cee:	09 c0       	rjmp	.+18     	; 0xd02 <vfprintf+0x212>
     cf0:	90 95       	com	r25
     cf2:	80 95       	com	r24
     cf4:	70 95       	com	r23
     cf6:	61 95       	neg	r22
     cf8:	7f 4f       	sbci	r23, 0xFF	; 255
     cfa:	8f 4f       	sbci	r24, 0xFF	; 255
     cfc:	9f 4f       	sbci	r25, 0xFF	; 255
     cfe:	f0 68       	ori	r31, 0x80	; 128
     d00:	3f 2e       	mov	r3, r31
     d02:	2a e0       	ldi	r18, 0x0A	; 10
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	a3 01       	movw	r20, r6
     d08:	0e 94 ef 08 	call	0x11de	; 0x11de <__ultoa_invert>
     d0c:	88 2e       	mov	r8, r24
     d0e:	86 18       	sub	r8, r6
     d10:	45 c0       	rjmp	.+138    	; 0xd9c <vfprintf+0x2ac>
     d12:	85 37       	cpi	r24, 0x75	; 117
     d14:	31 f4       	brne	.+12     	; 0xd22 <vfprintf+0x232>
     d16:	23 2d       	mov	r18, r3
     d18:	2f 7e       	andi	r18, 0xEF	; 239
     d1a:	b2 2e       	mov	r11, r18
     d1c:	2a e0       	ldi	r18, 0x0A	; 10
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	25 c0       	rjmp	.+74     	; 0xd6c <vfprintf+0x27c>
     d22:	93 2d       	mov	r25, r3
     d24:	99 7f       	andi	r25, 0xF9	; 249
     d26:	b9 2e       	mov	r11, r25
     d28:	8f 36       	cpi	r24, 0x6F	; 111
     d2a:	c1 f0       	breq	.+48     	; 0xd5c <vfprintf+0x26c>
     d2c:	18 f4       	brcc	.+6      	; 0xd34 <vfprintf+0x244>
     d2e:	88 35       	cpi	r24, 0x58	; 88
     d30:	79 f0       	breq	.+30     	; 0xd50 <vfprintf+0x260>
     d32:	b5 c0       	rjmp	.+362    	; 0xe9e <vfprintf+0x3ae>
     d34:	80 37       	cpi	r24, 0x70	; 112
     d36:	19 f0       	breq	.+6      	; 0xd3e <vfprintf+0x24e>
     d38:	88 37       	cpi	r24, 0x78	; 120
     d3a:	21 f0       	breq	.+8      	; 0xd44 <vfprintf+0x254>
     d3c:	b0 c0       	rjmp	.+352    	; 0xe9e <vfprintf+0x3ae>
     d3e:	e9 2f       	mov	r30, r25
     d40:	e0 61       	ori	r30, 0x10	; 16
     d42:	be 2e       	mov	r11, r30
     d44:	b4 fe       	sbrs	r11, 4
     d46:	0d c0       	rjmp	.+26     	; 0xd62 <vfprintf+0x272>
     d48:	fb 2d       	mov	r31, r11
     d4a:	f4 60       	ori	r31, 0x04	; 4
     d4c:	bf 2e       	mov	r11, r31
     d4e:	09 c0       	rjmp	.+18     	; 0xd62 <vfprintf+0x272>
     d50:	34 fe       	sbrs	r3, 4
     d52:	0a c0       	rjmp	.+20     	; 0xd68 <vfprintf+0x278>
     d54:	29 2f       	mov	r18, r25
     d56:	26 60       	ori	r18, 0x06	; 6
     d58:	b2 2e       	mov	r11, r18
     d5a:	06 c0       	rjmp	.+12     	; 0xd68 <vfprintf+0x278>
     d5c:	28 e0       	ldi	r18, 0x08	; 8
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	05 c0       	rjmp	.+10     	; 0xd6c <vfprintf+0x27c>
     d62:	20 e1       	ldi	r18, 0x10	; 16
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <vfprintf+0x27c>
     d68:	20 e1       	ldi	r18, 0x10	; 16
     d6a:	32 e0       	ldi	r19, 0x02	; 2
     d6c:	f8 01       	movw	r30, r16
     d6e:	b7 fe       	sbrs	r11, 7
     d70:	07 c0       	rjmp	.+14     	; 0xd80 <vfprintf+0x290>
     d72:	60 81       	ld	r22, Z
     d74:	71 81       	ldd	r23, Z+1	; 0x01
     d76:	82 81       	ldd	r24, Z+2	; 0x02
     d78:	93 81       	ldd	r25, Z+3	; 0x03
     d7a:	0c 5f       	subi	r16, 0xFC	; 252
     d7c:	1f 4f       	sbci	r17, 0xFF	; 255
     d7e:	06 c0       	rjmp	.+12     	; 0xd8c <vfprintf+0x29c>
     d80:	60 81       	ld	r22, Z
     d82:	71 81       	ldd	r23, Z+1	; 0x01
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	0e 5f       	subi	r16, 0xFE	; 254
     d8a:	1f 4f       	sbci	r17, 0xFF	; 255
     d8c:	a3 01       	movw	r20, r6
     d8e:	0e 94 ef 08 	call	0x11de	; 0x11de <__ultoa_invert>
     d92:	88 2e       	mov	r8, r24
     d94:	86 18       	sub	r8, r6
     d96:	fb 2d       	mov	r31, r11
     d98:	ff 77       	andi	r31, 0x7F	; 127
     d9a:	3f 2e       	mov	r3, r31
     d9c:	36 fe       	sbrs	r3, 6
     d9e:	0d c0       	rjmp	.+26     	; 0xdba <vfprintf+0x2ca>
     da0:	23 2d       	mov	r18, r3
     da2:	2e 7f       	andi	r18, 0xFE	; 254
     da4:	a2 2e       	mov	r10, r18
     da6:	89 14       	cp	r8, r9
     da8:	58 f4       	brcc	.+22     	; 0xdc0 <vfprintf+0x2d0>
     daa:	34 fe       	sbrs	r3, 4
     dac:	0b c0       	rjmp	.+22     	; 0xdc4 <vfprintf+0x2d4>
     dae:	32 fc       	sbrc	r3, 2
     db0:	09 c0       	rjmp	.+18     	; 0xdc4 <vfprintf+0x2d4>
     db2:	83 2d       	mov	r24, r3
     db4:	8e 7e       	andi	r24, 0xEE	; 238
     db6:	a8 2e       	mov	r10, r24
     db8:	05 c0       	rjmp	.+10     	; 0xdc4 <vfprintf+0x2d4>
     dba:	b8 2c       	mov	r11, r8
     dbc:	a3 2c       	mov	r10, r3
     dbe:	03 c0       	rjmp	.+6      	; 0xdc6 <vfprintf+0x2d6>
     dc0:	b8 2c       	mov	r11, r8
     dc2:	01 c0       	rjmp	.+2      	; 0xdc6 <vfprintf+0x2d6>
     dc4:	b9 2c       	mov	r11, r9
     dc6:	a4 fe       	sbrs	r10, 4
     dc8:	0f c0       	rjmp	.+30     	; 0xde8 <vfprintf+0x2f8>
     dca:	fe 01       	movw	r30, r28
     dcc:	e8 0d       	add	r30, r8
     dce:	f1 1d       	adc	r31, r1
     dd0:	80 81       	ld	r24, Z
     dd2:	80 33       	cpi	r24, 0x30	; 48
     dd4:	21 f4       	brne	.+8      	; 0xdde <vfprintf+0x2ee>
     dd6:	9a 2d       	mov	r25, r10
     dd8:	99 7e       	andi	r25, 0xE9	; 233
     dda:	a9 2e       	mov	r10, r25
     ddc:	09 c0       	rjmp	.+18     	; 0xdf0 <vfprintf+0x300>
     dde:	a2 fe       	sbrs	r10, 2
     de0:	06 c0       	rjmp	.+12     	; 0xdee <vfprintf+0x2fe>
     de2:	b3 94       	inc	r11
     de4:	b3 94       	inc	r11
     de6:	04 c0       	rjmp	.+8      	; 0xdf0 <vfprintf+0x300>
     de8:	8a 2d       	mov	r24, r10
     dea:	86 78       	andi	r24, 0x86	; 134
     dec:	09 f0       	breq	.+2      	; 0xdf0 <vfprintf+0x300>
     dee:	b3 94       	inc	r11
     df0:	a3 fc       	sbrc	r10, 3
     df2:	11 c0       	rjmp	.+34     	; 0xe16 <vfprintf+0x326>
     df4:	a0 fe       	sbrs	r10, 0
     df6:	06 c0       	rjmp	.+12     	; 0xe04 <vfprintf+0x314>
     df8:	b2 14       	cp	r11, r2
     dfa:	88 f4       	brcc	.+34     	; 0xe1e <vfprintf+0x32e>
     dfc:	28 0c       	add	r2, r8
     dfe:	92 2c       	mov	r9, r2
     e00:	9b 18       	sub	r9, r11
     e02:	0e c0       	rjmp	.+28     	; 0xe20 <vfprintf+0x330>
     e04:	b2 14       	cp	r11, r2
     e06:	60 f4       	brcc	.+24     	; 0xe20 <vfprintf+0x330>
     e08:	b6 01       	movw	r22, r12
     e0a:	80 e2       	ldi	r24, 0x20	; 32
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     e12:	b3 94       	inc	r11
     e14:	f7 cf       	rjmp	.-18     	; 0xe04 <vfprintf+0x314>
     e16:	b2 14       	cp	r11, r2
     e18:	18 f4       	brcc	.+6      	; 0xe20 <vfprintf+0x330>
     e1a:	2b 18       	sub	r2, r11
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <vfprintf+0x332>
     e1e:	98 2c       	mov	r9, r8
     e20:	21 2c       	mov	r2, r1
     e22:	a4 fe       	sbrs	r10, 4
     e24:	10 c0       	rjmp	.+32     	; 0xe46 <vfprintf+0x356>
     e26:	b6 01       	movw	r22, r12
     e28:	80 e3       	ldi	r24, 0x30	; 48
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     e30:	a2 fe       	sbrs	r10, 2
     e32:	17 c0       	rjmp	.+46     	; 0xe62 <vfprintf+0x372>
     e34:	a1 fc       	sbrc	r10, 1
     e36:	03 c0       	rjmp	.+6      	; 0xe3e <vfprintf+0x34e>
     e38:	88 e7       	ldi	r24, 0x78	; 120
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	02 c0       	rjmp	.+4      	; 0xe42 <vfprintf+0x352>
     e3e:	88 e5       	ldi	r24, 0x58	; 88
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	b6 01       	movw	r22, r12
     e44:	0c c0       	rjmp	.+24     	; 0xe5e <vfprintf+0x36e>
     e46:	8a 2d       	mov	r24, r10
     e48:	86 78       	andi	r24, 0x86	; 134
     e4a:	59 f0       	breq	.+22     	; 0xe62 <vfprintf+0x372>
     e4c:	a1 fe       	sbrs	r10, 1
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <vfprintf+0x364>
     e50:	8b e2       	ldi	r24, 0x2B	; 43
     e52:	01 c0       	rjmp	.+2      	; 0xe56 <vfprintf+0x366>
     e54:	80 e2       	ldi	r24, 0x20	; 32
     e56:	a7 fc       	sbrc	r10, 7
     e58:	8d e2       	ldi	r24, 0x2D	; 45
     e5a:	b6 01       	movw	r22, r12
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     e62:	89 14       	cp	r8, r9
     e64:	38 f4       	brcc	.+14     	; 0xe74 <vfprintf+0x384>
     e66:	b6 01       	movw	r22, r12
     e68:	80 e3       	ldi	r24, 0x30	; 48
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     e70:	9a 94       	dec	r9
     e72:	f7 cf       	rjmp	.-18     	; 0xe62 <vfprintf+0x372>
     e74:	8a 94       	dec	r8
     e76:	f3 01       	movw	r30, r6
     e78:	e8 0d       	add	r30, r8
     e7a:	f1 1d       	adc	r31, r1
     e7c:	80 81       	ld	r24, Z
     e7e:	b6 01       	movw	r22, r12
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     e86:	81 10       	cpse	r8, r1
     e88:	f5 cf       	rjmp	.-22     	; 0xe74 <vfprintf+0x384>
     e8a:	22 20       	and	r2, r2
     e8c:	09 f4       	brne	.+2      	; 0xe90 <vfprintf+0x3a0>
     e8e:	42 ce       	rjmp	.-892    	; 0xb14 <vfprintf+0x24>
     e90:	b6 01       	movw	r22, r12
     e92:	80 e2       	ldi	r24, 0x20	; 32
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 b3 08 	call	0x1166	; 0x1166 <fputc>
     e9a:	2a 94       	dec	r2
     e9c:	f6 cf       	rjmp	.-20     	; 0xe8a <vfprintf+0x39a>
     e9e:	f6 01       	movw	r30, r12
     ea0:	86 81       	ldd	r24, Z+6	; 0x06
     ea2:	97 81       	ldd	r25, Z+7	; 0x07
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <vfprintf+0x3ba>
     ea6:	8f ef       	ldi	r24, 0xFF	; 255
     ea8:	9f ef       	ldi	r25, 0xFF	; 255
     eaa:	2b 96       	adiw	r28, 0x0b	; 11
     eac:	e2 e1       	ldi	r30, 0x12	; 18
     eae:	0c 94 69 09 	jmp	0x12d2	; 0x12d2 <__epilogue_restores__>

00000eb2 <calloc>:
     eb2:	0f 93       	push	r16
     eb4:	1f 93       	push	r17
     eb6:	cf 93       	push	r28
     eb8:	df 93       	push	r29
     eba:	86 9f       	mul	r24, r22
     ebc:	80 01       	movw	r16, r0
     ebe:	87 9f       	mul	r24, r23
     ec0:	10 0d       	add	r17, r0
     ec2:	96 9f       	mul	r25, r22
     ec4:	10 0d       	add	r17, r0
     ec6:	11 24       	eor	r1, r1
     ec8:	c8 01       	movw	r24, r16
     eca:	0e 94 75 07 	call	0xeea	; 0xeea <malloc>
     ece:	ec 01       	movw	r28, r24
     ed0:	00 97       	sbiw	r24, 0x00	; 0
     ed2:	29 f0       	breq	.+10     	; 0xede <calloc+0x2c>
     ed4:	a8 01       	movw	r20, r16
     ed6:	60 e0       	ldi	r22, 0x00	; 0
     ed8:	70 e0       	ldi	r23, 0x00	; 0
     eda:	0e 94 a1 08 	call	0x1142	; 0x1142 <memset>
     ede:	ce 01       	movw	r24, r28
     ee0:	df 91       	pop	r29
     ee2:	cf 91       	pop	r28
     ee4:	1f 91       	pop	r17
     ee6:	0f 91       	pop	r16
     ee8:	08 95       	ret

00000eea <malloc>:
     eea:	0f 93       	push	r16
     eec:	1f 93       	push	r17
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	82 30       	cpi	r24, 0x02	; 2
     ef4:	91 05       	cpc	r25, r1
     ef6:	10 f4       	brcc	.+4      	; 0xefc <malloc+0x12>
     ef8:	82 e0       	ldi	r24, 0x02	; 2
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <__flp>
     f00:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <__flp+0x1>
     f04:	20 e0       	ldi	r18, 0x00	; 0
     f06:	30 e0       	ldi	r19, 0x00	; 0
     f08:	a0 e0       	ldi	r26, 0x00	; 0
     f0a:	b0 e0       	ldi	r27, 0x00	; 0
     f0c:	30 97       	sbiw	r30, 0x00	; 0
     f0e:	19 f1       	breq	.+70     	; 0xf56 <malloc+0x6c>
     f10:	40 81       	ld	r20, Z
     f12:	51 81       	ldd	r21, Z+1	; 0x01
     f14:	02 81       	ldd	r16, Z+2	; 0x02
     f16:	13 81       	ldd	r17, Z+3	; 0x03
     f18:	48 17       	cp	r20, r24
     f1a:	59 07       	cpc	r21, r25
     f1c:	c8 f0       	brcs	.+50     	; 0xf50 <malloc+0x66>
     f1e:	84 17       	cp	r24, r20
     f20:	95 07       	cpc	r25, r21
     f22:	69 f4       	brne	.+26     	; 0xf3e <malloc+0x54>
     f24:	10 97       	sbiw	r26, 0x00	; 0
     f26:	31 f0       	breq	.+12     	; 0xf34 <malloc+0x4a>
     f28:	12 96       	adiw	r26, 0x02	; 2
     f2a:	0c 93       	st	X, r16
     f2c:	12 97       	sbiw	r26, 0x02	; 2
     f2e:	13 96       	adiw	r26, 0x03	; 3
     f30:	1c 93       	st	X, r17
     f32:	27 c0       	rjmp	.+78     	; 0xf82 <malloc+0x98>
     f34:	00 93 58 01 	sts	0x0158, r16	; 0x800158 <__flp>
     f38:	10 93 59 01 	sts	0x0159, r17	; 0x800159 <__flp+0x1>
     f3c:	22 c0       	rjmp	.+68     	; 0xf82 <malloc+0x98>
     f3e:	21 15       	cp	r18, r1
     f40:	31 05       	cpc	r19, r1
     f42:	19 f0       	breq	.+6      	; 0xf4a <malloc+0x60>
     f44:	42 17       	cp	r20, r18
     f46:	53 07       	cpc	r21, r19
     f48:	18 f4       	brcc	.+6      	; 0xf50 <malloc+0x66>
     f4a:	9a 01       	movw	r18, r20
     f4c:	bd 01       	movw	r22, r26
     f4e:	ef 01       	movw	r28, r30
     f50:	df 01       	movw	r26, r30
     f52:	f8 01       	movw	r30, r16
     f54:	db cf       	rjmp	.-74     	; 0xf0c <malloc+0x22>
     f56:	21 15       	cp	r18, r1
     f58:	31 05       	cpc	r19, r1
     f5a:	f9 f0       	breq	.+62     	; 0xf9a <malloc+0xb0>
     f5c:	28 1b       	sub	r18, r24
     f5e:	39 0b       	sbc	r19, r25
     f60:	24 30       	cpi	r18, 0x04	; 4
     f62:	31 05       	cpc	r19, r1
     f64:	80 f4       	brcc	.+32     	; 0xf86 <malloc+0x9c>
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	9b 81       	ldd	r25, Y+3	; 0x03
     f6a:	61 15       	cp	r22, r1
     f6c:	71 05       	cpc	r23, r1
     f6e:	21 f0       	breq	.+8      	; 0xf78 <malloc+0x8e>
     f70:	fb 01       	movw	r30, r22
     f72:	93 83       	std	Z+3, r25	; 0x03
     f74:	82 83       	std	Z+2, r24	; 0x02
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <malloc+0x96>
     f78:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <__flp+0x1>
     f7c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <__flp>
     f80:	fe 01       	movw	r30, r28
     f82:	32 96       	adiw	r30, 0x02	; 2
     f84:	44 c0       	rjmp	.+136    	; 0x100e <malloc+0x124>
     f86:	fe 01       	movw	r30, r28
     f88:	e2 0f       	add	r30, r18
     f8a:	f3 1f       	adc	r31, r19
     f8c:	81 93       	st	Z+, r24
     f8e:	91 93       	st	Z+, r25
     f90:	22 50       	subi	r18, 0x02	; 2
     f92:	31 09       	sbc	r19, r1
     f94:	39 83       	std	Y+1, r19	; 0x01
     f96:	28 83       	st	Y, r18
     f98:	3a c0       	rjmp	.+116    	; 0x100e <malloc+0x124>
     f9a:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__brkval>
     f9e:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__brkval+0x1>
     fa2:	23 2b       	or	r18, r19
     fa4:	41 f4       	brne	.+16     	; 0xfb6 <malloc+0xcc>
     fa6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     faa:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     fae:	30 93 57 01 	sts	0x0157, r19	; 0x800157 <__brkval+0x1>
     fb2:	20 93 56 01 	sts	0x0156, r18	; 0x800156 <__brkval>
     fb6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fba:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fbe:	21 15       	cp	r18, r1
     fc0:	31 05       	cpc	r19, r1
     fc2:	41 f4       	brne	.+16     	; 0xfd4 <malloc+0xea>
     fc4:	2d b7       	in	r18, 0x3d	; 61
     fc6:	3e b7       	in	r19, 0x3e	; 62
     fc8:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     fcc:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     fd0:	24 1b       	sub	r18, r20
     fd2:	35 0b       	sbc	r19, r21
     fd4:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <__brkval>
     fd8:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <__brkval+0x1>
     fdc:	e2 17       	cp	r30, r18
     fde:	f3 07       	cpc	r31, r19
     fe0:	a0 f4       	brcc	.+40     	; 0x100a <malloc+0x120>
     fe2:	2e 1b       	sub	r18, r30
     fe4:	3f 0b       	sbc	r19, r31
     fe6:	28 17       	cp	r18, r24
     fe8:	39 07       	cpc	r19, r25
     fea:	78 f0       	brcs	.+30     	; 0x100a <malloc+0x120>
     fec:	ac 01       	movw	r20, r24
     fee:	4e 5f       	subi	r20, 0xFE	; 254
     ff0:	5f 4f       	sbci	r21, 0xFF	; 255
     ff2:	24 17       	cp	r18, r20
     ff4:	35 07       	cpc	r19, r21
     ff6:	48 f0       	brcs	.+18     	; 0x100a <malloc+0x120>
     ff8:	4e 0f       	add	r20, r30
     ffa:	5f 1f       	adc	r21, r31
     ffc:	50 93 57 01 	sts	0x0157, r21	; 0x800157 <__brkval+0x1>
    1000:	40 93 56 01 	sts	0x0156, r20	; 0x800156 <__brkval>
    1004:	81 93       	st	Z+, r24
    1006:	91 93       	st	Z+, r25
    1008:	02 c0       	rjmp	.+4      	; 0x100e <malloc+0x124>
    100a:	e0 e0       	ldi	r30, 0x00	; 0
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	cf 01       	movw	r24, r30
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	08 95       	ret

0000101a <free>:
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	00 97       	sbiw	r24, 0x00	; 0
    1020:	09 f4       	brne	.+2      	; 0x1024 <free+0xa>
    1022:	81 c0       	rjmp	.+258    	; 0x1126 <free+0x10c>
    1024:	fc 01       	movw	r30, r24
    1026:	32 97       	sbiw	r30, 0x02	; 2
    1028:	13 82       	std	Z+3, r1	; 0x03
    102a:	12 82       	std	Z+2, r1	; 0x02
    102c:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <__flp>
    1030:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <__flp+0x1>
    1034:	10 97       	sbiw	r26, 0x00	; 0
    1036:	81 f4       	brne	.+32     	; 0x1058 <free+0x3e>
    1038:	20 81       	ld	r18, Z
    103a:	31 81       	ldd	r19, Z+1	; 0x01
    103c:	82 0f       	add	r24, r18
    103e:	93 1f       	adc	r25, r19
    1040:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__brkval>
    1044:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__brkval+0x1>
    1048:	28 17       	cp	r18, r24
    104a:	39 07       	cpc	r19, r25
    104c:	51 f5       	brne	.+84     	; 0x10a2 <free+0x88>
    104e:	f0 93 57 01 	sts	0x0157, r31	; 0x800157 <__brkval+0x1>
    1052:	e0 93 56 01 	sts	0x0156, r30	; 0x800156 <__brkval>
    1056:	67 c0       	rjmp	.+206    	; 0x1126 <free+0x10c>
    1058:	ed 01       	movw	r28, r26
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	ce 17       	cp	r28, r30
    1060:	df 07       	cpc	r29, r31
    1062:	40 f4       	brcc	.+16     	; 0x1074 <free+0x5a>
    1064:	4a 81       	ldd	r20, Y+2	; 0x02
    1066:	5b 81       	ldd	r21, Y+3	; 0x03
    1068:	9e 01       	movw	r18, r28
    106a:	41 15       	cp	r20, r1
    106c:	51 05       	cpc	r21, r1
    106e:	f1 f0       	breq	.+60     	; 0x10ac <free+0x92>
    1070:	ea 01       	movw	r28, r20
    1072:	f5 cf       	rjmp	.-22     	; 0x105e <free+0x44>
    1074:	d3 83       	std	Z+3, r29	; 0x03
    1076:	c2 83       	std	Z+2, r28	; 0x02
    1078:	40 81       	ld	r20, Z
    107a:	51 81       	ldd	r21, Z+1	; 0x01
    107c:	84 0f       	add	r24, r20
    107e:	95 1f       	adc	r25, r21
    1080:	c8 17       	cp	r28, r24
    1082:	d9 07       	cpc	r29, r25
    1084:	59 f4       	brne	.+22     	; 0x109c <free+0x82>
    1086:	88 81       	ld	r24, Y
    1088:	99 81       	ldd	r25, Y+1	; 0x01
    108a:	84 0f       	add	r24, r20
    108c:	95 1f       	adc	r25, r21
    108e:	02 96       	adiw	r24, 0x02	; 2
    1090:	91 83       	std	Z+1, r25	; 0x01
    1092:	80 83       	st	Z, r24
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	9b 81       	ldd	r25, Y+3	; 0x03
    1098:	93 83       	std	Z+3, r25	; 0x03
    109a:	82 83       	std	Z+2, r24	; 0x02
    109c:	21 15       	cp	r18, r1
    109e:	31 05       	cpc	r19, r1
    10a0:	29 f4       	brne	.+10     	; 0x10ac <free+0x92>
    10a2:	f0 93 59 01 	sts	0x0159, r31	; 0x800159 <__flp+0x1>
    10a6:	e0 93 58 01 	sts	0x0158, r30	; 0x800158 <__flp>
    10aa:	3d c0       	rjmp	.+122    	; 0x1126 <free+0x10c>
    10ac:	e9 01       	movw	r28, r18
    10ae:	fb 83       	std	Y+3, r31	; 0x03
    10b0:	ea 83       	std	Y+2, r30	; 0x02
    10b2:	49 91       	ld	r20, Y+
    10b4:	59 91       	ld	r21, Y+
    10b6:	c4 0f       	add	r28, r20
    10b8:	d5 1f       	adc	r29, r21
    10ba:	ec 17       	cp	r30, r28
    10bc:	fd 07       	cpc	r31, r29
    10be:	61 f4       	brne	.+24     	; 0x10d8 <free+0xbe>
    10c0:	80 81       	ld	r24, Z
    10c2:	91 81       	ldd	r25, Z+1	; 0x01
    10c4:	84 0f       	add	r24, r20
    10c6:	95 1f       	adc	r25, r21
    10c8:	02 96       	adiw	r24, 0x02	; 2
    10ca:	e9 01       	movw	r28, r18
    10cc:	99 83       	std	Y+1, r25	; 0x01
    10ce:	88 83       	st	Y, r24
    10d0:	82 81       	ldd	r24, Z+2	; 0x02
    10d2:	93 81       	ldd	r25, Z+3	; 0x03
    10d4:	9b 83       	std	Y+3, r25	; 0x03
    10d6:	8a 83       	std	Y+2, r24	; 0x02
    10d8:	e0 e0       	ldi	r30, 0x00	; 0
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	12 96       	adiw	r26, 0x02	; 2
    10de:	8d 91       	ld	r24, X+
    10e0:	9c 91       	ld	r25, X
    10e2:	13 97       	sbiw	r26, 0x03	; 3
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	19 f0       	breq	.+6      	; 0x10ee <free+0xd4>
    10e8:	fd 01       	movw	r30, r26
    10ea:	dc 01       	movw	r26, r24
    10ec:	f7 cf       	rjmp	.-18     	; 0x10dc <free+0xc2>
    10ee:	8d 91       	ld	r24, X+
    10f0:	9c 91       	ld	r25, X
    10f2:	11 97       	sbiw	r26, 0x01	; 1
    10f4:	9d 01       	movw	r18, r26
    10f6:	2e 5f       	subi	r18, 0xFE	; 254
    10f8:	3f 4f       	sbci	r19, 0xFF	; 255
    10fa:	82 0f       	add	r24, r18
    10fc:	93 1f       	adc	r25, r19
    10fe:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__brkval>
    1102:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__brkval+0x1>
    1106:	28 17       	cp	r18, r24
    1108:	39 07       	cpc	r19, r25
    110a:	69 f4       	brne	.+26     	; 0x1126 <free+0x10c>
    110c:	30 97       	sbiw	r30, 0x00	; 0
    110e:	29 f4       	brne	.+10     	; 0x111a <free+0x100>
    1110:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <__flp+0x1>
    1114:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <__flp>
    1118:	02 c0       	rjmp	.+4      	; 0x111e <free+0x104>
    111a:	13 82       	std	Z+3, r1	; 0x03
    111c:	12 82       	std	Z+2, r1	; 0x02
    111e:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <__brkval+0x1>
    1122:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <__brkval>
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	08 95       	ret

0000112c <strnlen_P>:
    112c:	fc 01       	movw	r30, r24
    112e:	05 90       	lpm	r0, Z+
    1130:	61 50       	subi	r22, 0x01	; 1
    1132:	70 40       	sbci	r23, 0x00	; 0
    1134:	01 10       	cpse	r0, r1
    1136:	d8 f7       	brcc	.-10     	; 0x112e <strnlen_P+0x2>
    1138:	80 95       	com	r24
    113a:	90 95       	com	r25
    113c:	8e 0f       	add	r24, r30
    113e:	9f 1f       	adc	r25, r31
    1140:	08 95       	ret

00001142 <memset>:
    1142:	dc 01       	movw	r26, r24
    1144:	01 c0       	rjmp	.+2      	; 0x1148 <memset+0x6>
    1146:	6d 93       	st	X+, r22
    1148:	41 50       	subi	r20, 0x01	; 1
    114a:	50 40       	sbci	r21, 0x00	; 0
    114c:	e0 f7       	brcc	.-8      	; 0x1146 <memset+0x4>
    114e:	08 95       	ret

00001150 <strnlen>:
    1150:	fc 01       	movw	r30, r24
    1152:	61 50       	subi	r22, 0x01	; 1
    1154:	70 40       	sbci	r23, 0x00	; 0
    1156:	01 90       	ld	r0, Z+
    1158:	01 10       	cpse	r0, r1
    115a:	d8 f7       	brcc	.-10     	; 0x1152 <strnlen+0x2>
    115c:	80 95       	com	r24
    115e:	90 95       	com	r25
    1160:	8e 0f       	add	r24, r30
    1162:	9f 1f       	adc	r25, r31
    1164:	08 95       	ret

00001166 <fputc>:
    1166:	0f 93       	push	r16
    1168:	1f 93       	push	r17
    116a:	cf 93       	push	r28
    116c:	df 93       	push	r29
    116e:	fb 01       	movw	r30, r22
    1170:	23 81       	ldd	r18, Z+3	; 0x03
    1172:	21 fd       	sbrc	r18, 1
    1174:	03 c0       	rjmp	.+6      	; 0x117c <fputc+0x16>
    1176:	8f ef       	ldi	r24, 0xFF	; 255
    1178:	9f ef       	ldi	r25, 0xFF	; 255
    117a:	2c c0       	rjmp	.+88     	; 0x11d4 <fputc+0x6e>
    117c:	22 ff       	sbrs	r18, 2
    117e:	16 c0       	rjmp	.+44     	; 0x11ac <fputc+0x46>
    1180:	46 81       	ldd	r20, Z+6	; 0x06
    1182:	57 81       	ldd	r21, Z+7	; 0x07
    1184:	24 81       	ldd	r18, Z+4	; 0x04
    1186:	35 81       	ldd	r19, Z+5	; 0x05
    1188:	42 17       	cp	r20, r18
    118a:	53 07       	cpc	r21, r19
    118c:	44 f4       	brge	.+16     	; 0x119e <fputc+0x38>
    118e:	a0 81       	ld	r26, Z
    1190:	b1 81       	ldd	r27, Z+1	; 0x01
    1192:	9d 01       	movw	r18, r26
    1194:	2f 5f       	subi	r18, 0xFF	; 255
    1196:	3f 4f       	sbci	r19, 0xFF	; 255
    1198:	31 83       	std	Z+1, r19	; 0x01
    119a:	20 83       	st	Z, r18
    119c:	8c 93       	st	X, r24
    119e:	26 81       	ldd	r18, Z+6	; 0x06
    11a0:	37 81       	ldd	r19, Z+7	; 0x07
    11a2:	2f 5f       	subi	r18, 0xFF	; 255
    11a4:	3f 4f       	sbci	r19, 0xFF	; 255
    11a6:	37 83       	std	Z+7, r19	; 0x07
    11a8:	26 83       	std	Z+6, r18	; 0x06
    11aa:	14 c0       	rjmp	.+40     	; 0x11d4 <fputc+0x6e>
    11ac:	8b 01       	movw	r16, r22
    11ae:	ec 01       	movw	r28, r24
    11b0:	fb 01       	movw	r30, r22
    11b2:	00 84       	ldd	r0, Z+8	; 0x08
    11b4:	f1 85       	ldd	r31, Z+9	; 0x09
    11b6:	e0 2d       	mov	r30, r0
    11b8:	09 95       	icall
    11ba:	89 2b       	or	r24, r25
    11bc:	e1 f6       	brne	.-72     	; 0x1176 <fputc+0x10>
    11be:	d8 01       	movw	r26, r16
    11c0:	16 96       	adiw	r26, 0x06	; 6
    11c2:	8d 91       	ld	r24, X+
    11c4:	9c 91       	ld	r25, X
    11c6:	17 97       	sbiw	r26, 0x07	; 7
    11c8:	01 96       	adiw	r24, 0x01	; 1
    11ca:	17 96       	adiw	r26, 0x07	; 7
    11cc:	9c 93       	st	X, r25
    11ce:	8e 93       	st	-X, r24
    11d0:	16 97       	sbiw	r26, 0x06	; 6
    11d2:	ce 01       	movw	r24, r28
    11d4:	df 91       	pop	r29
    11d6:	cf 91       	pop	r28
    11d8:	1f 91       	pop	r17
    11da:	0f 91       	pop	r16
    11dc:	08 95       	ret

000011de <__ultoa_invert>:
    11de:	fa 01       	movw	r30, r20
    11e0:	aa 27       	eor	r26, r26
    11e2:	28 30       	cpi	r18, 0x08	; 8
    11e4:	51 f1       	breq	.+84     	; 0x123a <__ultoa_invert+0x5c>
    11e6:	20 31       	cpi	r18, 0x10	; 16
    11e8:	81 f1       	breq	.+96     	; 0x124a <__ultoa_invert+0x6c>
    11ea:	e8 94       	clt
    11ec:	6f 93       	push	r22
    11ee:	6e 7f       	andi	r22, 0xFE	; 254
    11f0:	6e 5f       	subi	r22, 0xFE	; 254
    11f2:	7f 4f       	sbci	r23, 0xFF	; 255
    11f4:	8f 4f       	sbci	r24, 0xFF	; 255
    11f6:	9f 4f       	sbci	r25, 0xFF	; 255
    11f8:	af 4f       	sbci	r26, 0xFF	; 255
    11fa:	b1 e0       	ldi	r27, 0x01	; 1
    11fc:	3e d0       	rcall	.+124    	; 0x127a <__ultoa_invert+0x9c>
    11fe:	b4 e0       	ldi	r27, 0x04	; 4
    1200:	3c d0       	rcall	.+120    	; 0x127a <__ultoa_invert+0x9c>
    1202:	67 0f       	add	r22, r23
    1204:	78 1f       	adc	r23, r24
    1206:	89 1f       	adc	r24, r25
    1208:	9a 1f       	adc	r25, r26
    120a:	a1 1d       	adc	r26, r1
    120c:	68 0f       	add	r22, r24
    120e:	79 1f       	adc	r23, r25
    1210:	8a 1f       	adc	r24, r26
    1212:	91 1d       	adc	r25, r1
    1214:	a1 1d       	adc	r26, r1
    1216:	6a 0f       	add	r22, r26
    1218:	71 1d       	adc	r23, r1
    121a:	81 1d       	adc	r24, r1
    121c:	91 1d       	adc	r25, r1
    121e:	a1 1d       	adc	r26, r1
    1220:	20 d0       	rcall	.+64     	; 0x1262 <__ultoa_invert+0x84>
    1222:	09 f4       	brne	.+2      	; 0x1226 <__ultoa_invert+0x48>
    1224:	68 94       	set
    1226:	3f 91       	pop	r19
    1228:	2a e0       	ldi	r18, 0x0A	; 10
    122a:	26 9f       	mul	r18, r22
    122c:	11 24       	eor	r1, r1
    122e:	30 19       	sub	r19, r0
    1230:	30 5d       	subi	r19, 0xD0	; 208
    1232:	31 93       	st	Z+, r19
    1234:	de f6       	brtc	.-74     	; 0x11ec <__ultoa_invert+0xe>
    1236:	cf 01       	movw	r24, r30
    1238:	08 95       	ret
    123a:	46 2f       	mov	r20, r22
    123c:	47 70       	andi	r20, 0x07	; 7
    123e:	40 5d       	subi	r20, 0xD0	; 208
    1240:	41 93       	st	Z+, r20
    1242:	b3 e0       	ldi	r27, 0x03	; 3
    1244:	0f d0       	rcall	.+30     	; 0x1264 <__ultoa_invert+0x86>
    1246:	c9 f7       	brne	.-14     	; 0x123a <__ultoa_invert+0x5c>
    1248:	f6 cf       	rjmp	.-20     	; 0x1236 <__ultoa_invert+0x58>
    124a:	46 2f       	mov	r20, r22
    124c:	4f 70       	andi	r20, 0x0F	; 15
    124e:	40 5d       	subi	r20, 0xD0	; 208
    1250:	4a 33       	cpi	r20, 0x3A	; 58
    1252:	18 f0       	brcs	.+6      	; 0x125a <__ultoa_invert+0x7c>
    1254:	49 5d       	subi	r20, 0xD9	; 217
    1256:	31 fd       	sbrc	r19, 1
    1258:	40 52       	subi	r20, 0x20	; 32
    125a:	41 93       	st	Z+, r20
    125c:	02 d0       	rcall	.+4      	; 0x1262 <__ultoa_invert+0x84>
    125e:	a9 f7       	brne	.-22     	; 0x124a <__ultoa_invert+0x6c>
    1260:	ea cf       	rjmp	.-44     	; 0x1236 <__ultoa_invert+0x58>
    1262:	b4 e0       	ldi	r27, 0x04	; 4
    1264:	a6 95       	lsr	r26
    1266:	97 95       	ror	r25
    1268:	87 95       	ror	r24
    126a:	77 95       	ror	r23
    126c:	67 95       	ror	r22
    126e:	ba 95       	dec	r27
    1270:	c9 f7       	brne	.-14     	; 0x1264 <__ultoa_invert+0x86>
    1272:	00 97       	sbiw	r24, 0x00	; 0
    1274:	61 05       	cpc	r22, r1
    1276:	71 05       	cpc	r23, r1
    1278:	08 95       	ret
    127a:	9b 01       	movw	r18, r22
    127c:	ac 01       	movw	r20, r24
    127e:	0a 2e       	mov	r0, r26
    1280:	06 94       	lsr	r0
    1282:	57 95       	ror	r21
    1284:	47 95       	ror	r20
    1286:	37 95       	ror	r19
    1288:	27 95       	ror	r18
    128a:	ba 95       	dec	r27
    128c:	c9 f7       	brne	.-14     	; 0x1280 <__ultoa_invert+0xa2>
    128e:	62 0f       	add	r22, r18
    1290:	73 1f       	adc	r23, r19
    1292:	84 1f       	adc	r24, r20
    1294:	95 1f       	adc	r25, r21
    1296:	a0 1d       	adc	r26, r0
    1298:	08 95       	ret

0000129a <__prologue_saves__>:
    129a:	2f 92       	push	r2
    129c:	3f 92       	push	r3
    129e:	4f 92       	push	r4
    12a0:	5f 92       	push	r5
    12a2:	6f 92       	push	r6
    12a4:	7f 92       	push	r7
    12a6:	8f 92       	push	r8
    12a8:	9f 92       	push	r9
    12aa:	af 92       	push	r10
    12ac:	bf 92       	push	r11
    12ae:	cf 92       	push	r12
    12b0:	df 92       	push	r13
    12b2:	ef 92       	push	r14
    12b4:	ff 92       	push	r15
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	cf 93       	push	r28
    12bc:	df 93       	push	r29
    12be:	cd b7       	in	r28, 0x3d	; 61
    12c0:	de b7       	in	r29, 0x3e	; 62
    12c2:	ca 1b       	sub	r28, r26
    12c4:	db 0b       	sbc	r29, r27
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	09 94       	ijmp

000012d2 <__epilogue_restores__>:
    12d2:	2a 88       	ldd	r2, Y+18	; 0x12
    12d4:	39 88       	ldd	r3, Y+17	; 0x11
    12d6:	48 88       	ldd	r4, Y+16	; 0x10
    12d8:	5f 84       	ldd	r5, Y+15	; 0x0f
    12da:	6e 84       	ldd	r6, Y+14	; 0x0e
    12dc:	7d 84       	ldd	r7, Y+13	; 0x0d
    12de:	8c 84       	ldd	r8, Y+12	; 0x0c
    12e0:	9b 84       	ldd	r9, Y+11	; 0x0b
    12e2:	aa 84       	ldd	r10, Y+10	; 0x0a
    12e4:	b9 84       	ldd	r11, Y+9	; 0x09
    12e6:	c8 84       	ldd	r12, Y+8	; 0x08
    12e8:	df 80       	ldd	r13, Y+7	; 0x07
    12ea:	ee 80       	ldd	r14, Y+6	; 0x06
    12ec:	fd 80       	ldd	r15, Y+5	; 0x05
    12ee:	0c 81       	ldd	r16, Y+4	; 0x04
    12f0:	1b 81       	ldd	r17, Y+3	; 0x03
    12f2:	aa 81       	ldd	r26, Y+2	; 0x02
    12f4:	b9 81       	ldd	r27, Y+1	; 0x01
    12f6:	ce 0f       	add	r28, r30
    12f8:	d1 1d       	adc	r29, r1
    12fa:	0f b6       	in	r0, 0x3f	; 63
    12fc:	f8 94       	cli
    12fe:	de bf       	out	0x3e, r29	; 62
    1300:	0f be       	out	0x3f, r0	; 63
    1302:	cd bf       	out	0x3d, r28	; 61
    1304:	ed 01       	movw	r28, r26
    1306:	08 95       	ret

00001308 <_exit>:
    1308:	f8 94       	cli

0000130a <__stop_program>:
    130a:	ff cf       	rjmp	.-2      	; 0x130a <__stop_program>
